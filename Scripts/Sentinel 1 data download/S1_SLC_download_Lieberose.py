#!/usr/bin/python

# Usage:
#
#    In a terminal/command line, cd to the directory where this file lives. Then...
#
#    With embedded urls: ( download the hardcoded list of files in the 'files =' block below)
#
#       python ./download-all-2022-02-10_18-58-06.py
#
#    Download all files in a Metalink/CSV: (downloaded from ASF Vertex)
#
#       python ./download-all-2022-02-10_18-58-06.py /path/to/downloads.metalink localmetalink.metalink localcsv.csv
#
#    Compatibility: python >= 2.6.5, 2.7.5, 3.0
#
#    If downloading from a trusted source with invalid SSL Certs, use --insecure to ignore
#
#    For more information on bulk downloads, navigate to:
#        https://asf.alaska.edu/how-to/data-tools/data-tools/#bulk_download
#
#
#
#    This script was generated by the Alaska Satellite Facility's bulk download service.
#    For more information on the service, navigate to:
#        http://bulk-download.asf.alaska.edu/help
#

import sys, csv
import os, os.path
import tempfile, shutil
import re

import base64
import time
import getpass
import ssl
import signal
import socket

import xml.etree.ElementTree as ET

#############
# This next block is a bunch of Python 2/3 compatability

try:
   # Python 2.x Libs
   from urllib2 import build_opener, install_opener, Request, urlopen, HTTPError
   from urllib2 import URLError, HTTPSHandler,  HTTPHandler, HTTPCookieProcessor

   from cookielib import MozillaCookieJar
   from StringIO import StringIO

except ImportError as e:

   # Python 3.x Libs
   from urllib.request import build_opener, install_opener, Request, urlopen
   from urllib.request import HTTPHandler, HTTPSHandler, HTTPCookieProcessor
   from urllib.error import HTTPError, URLError

   from http.cookiejar import MozillaCookieJar
   from io import StringIO

###
# Global variables intended for cross-thread modification
abort = False

###
# A routine that handles trapped signals
def signal_handler(sig, frame):
    global abort
    sys.stderr.output("\n > Caught Signal. Exiting!\n")
    abort = True # necessary to cause the program to stop
    raise SystemExit  # this will only abort the thread that the ctrl+c was caught in

class bulk_downloader:
    def __init__(self):
        # List of files to download
        self.files = [ "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211222T051733_20211222T051800_041117_04E2A1_BA72.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211216T051638_20211216T051706_030046_039664_BC5D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211210T051734_20211210T051801_040942_04DCC5_2C03.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211204T051638_20211204T051706_029871_0390DB_B492.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211128T051734_20211128T051801_040767_04D6B5_1655.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211122T051639_20211122T051707_029696_038B5C_CF17.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211116T051735_20211116T051802_040592_04D0B2_DDB8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211110T051653_20211110T051720_029521_0385F3_523C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211104T051735_20211104T051802_040417_04CA96_2458.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211029T051653_20211029T051720_029346_038095_19AA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211023T051735_20211023T051802_040242_04C47E_69F9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211017T051653_20211017T051720_029171_037B32_1675.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211011T051735_20211011T051802_040067_04BE64_A945.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211005T051653_20211005T051720_028996_0375C9_7D68.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210929T051735_20210929T051802_039892_04B85E_97F3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210923T051653_20210923T051720_028821_037085_5231.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210917T051735_20210917T051802_039717_04B25B_11AB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210911T051652_20210911T051720_028646_036B2F_C4C6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210905T051734_20210905T051801_039542_04AC61_9AB7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210830T051652_20210830T051719_028471_0365C2_6673.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210824T051734_20210824T051801_039367_04A65B_DE4A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210818T051651_20210818T051718_028296_036048_2172.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210812T051733_20210812T051800_039192_04A051_A3DD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210806T051651_20210806T051718_028121_035ACF_6F4C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210731T051732_20210731T051759_039017_049A8F_B91F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210725T051650_20210725T051717_027946_03559A_93B7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210719T051732_20210719T051759_038842_04955D_835B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210713T051649_20210713T051716_027771_03506A_A1BB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210707T051731_20210707T051758_038667_04901E_9B10.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210701T051649_20210701T051716_027596_034B44_F031.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210625T051730_20210625T051757_038492_048AD8_1760.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210619T051648_20210619T051715_027421_034662_E00C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210613T051729_20210613T051757_038317_04859C_2837.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210607T051647_20210607T051714_027246_034125_6E7D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210601T051729_20210601T051756_038142_048071_9BE8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210526T051646_20210526T051713_027071_033BEF_8C18.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210520T051728_20210520T051755_037967_047B30_26AE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210514T051632_20210514T051700_026896_033696_ED49.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210508T051727_20210508T051754_037792_0475E2_0EFB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210502T051631_20210502T051659_026721_03311D_7637.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210426T051727_20210426T051754_037617_046FF7_FCAD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210420T051631_20210420T051659_026546_032B84_05FE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210414T051726_20210414T051753_037442_0469EF_35C4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210402T051726_20210402T051753_037267_0463E1_EC81.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210327T051630_20210327T051658_026196_032058_1DCD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210321T051725_20210321T051753_037092_045DDA_05C4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210315T051630_20210315T051658_026021_031AC9_ECB4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210309T051725_20210309T051752_036917_0457BA_F07B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210303T051630_20210303T051658_025846_03151C_E789.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210225T051725_20210225T051752_036742_04519D_936C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210219T051630_20210219T051658_025671_030F61_B201.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210207T051630_20210207T051658_025496_0309AB_BBF1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210201T051726_20210201T051753_036392_044574_087F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210126T051631_20210126T051658_025321_030402_C5DB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210114T051631_20210114T051659_025146_02FE71_1E73.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210108T051727_20210108T051754_036042_04393F_BA4D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210102T051632_20210102T051659_024971_02F8D2_6F41.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201227T051727_20201227T051755_035867_04332B_5025.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201221T051632_20201221T051700_024796_02F32F_41E4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201215T051728_20201215T051755_035692_042D17_0997.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201209T051633_20201209T051700_024621_02ED81_50A6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201203T051728_20201203T051756_035517_042709_2B63.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201127T051633_20201127T051701_024446_02E7E1_06E7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201121T051729_20201121T051756_035342_04210A_CD0B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201115T051647_20201115T051714_024271_02E261_746B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201109T051729_20201109T051756_035167_041AF0_56B0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201103T051647_20201103T051715_024096_02DCE0_3944.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201028T051729_20201028T051757_034992_0414E8_337F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201022T051647_20201022T051714_023921_02D776_0CCF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201016T051729_20201016T051757_034817_040EDE_DE71.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201010T051647_20201010T051715_023746_02D1F8_00A7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201004T051729_20201004T051756_034642_0408CB_AC0B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200928T051647_20200928T051714_023571_02CC8C_69EF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200922T051729_20200922T051756_034467_0402A8_F20A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200916T051647_20200916T051714_023396_02C711_68FA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200910T051729_20200910T051756_034292_03FC62_7F63.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200904T051646_20200904T051714_023221_02C190_B16C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200829T051728_20200829T051755_034117_03F644_7BB0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200823T051646_20200823T051713_023046_02BC20_8C41.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200817T051727_20200817T051754_033942_03F017_93E7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200811T051645_20200811T051712_022871_02B6A2_1742.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200805T051727_20200805T051754_033767_03EA03_E207.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200730T051645_20200730T051712_022696_02B139_3503.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200724T051726_20200724T051753_033592_03E4A5_7D48.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200718T051644_20200718T051711_022521_02ABE5_72DF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200712T051725_20200712T051752_033417_03DF44_81C2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200706T051643_20200706T051710_022346_02A699_314B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200630T051724_20200630T051752_033242_03D9F4_5C14.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200624T051642_20200624T051709_022171_02A142_3AFE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200618T051724_20200618T051751_033067_03D4A2_1E66.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200612T051642_20200612T051709_021996_029BEE_299B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200606T051723_20200606T051750_032892_03CF59_9C19.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200531T051641_20200531T051708_021821_0296B4_9365.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200525T051722_20200525T051750_032717_03CA2F_6F50.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200519T051640_20200519T051707_021646_02917C_699A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200513T051722_20200513T051749_032542_03C4E0_1335.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200507T051640_20200507T051707_021471_028C4A_0E51.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200501T051721_20200501T051748_032367_03BF2F_0B09.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200425T051640_20200425T051707_021296_0286C5_61D9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200413T051630_20200413T051658_021121_028140_605A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200407T051720_20200407T051747_032017_03B2DF_0EC5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200401T051630_20200401T051658_020946_027BB4_ADC4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200320T051630_20200320T051658_020771_02762C_236A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200314T051720_20200314T051747_031667_03A68C_786B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200308T051629_20200308T051657_020596_0270A3_03F0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200225T051629_20200225T051657_020421_026B0F_3963.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200219T051720_20200219T051747_031317_039A73_E826.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200213T051630_20200213T051657_020246_02656F_983D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200207T051720_20200207T051747_031142_039466_41C8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200201T051630_20200201T051658_020071_025FC9_468C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200126T051720_20200126T051747_030967_038E4E_5531.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200120T051630_20200120T051658_019896_025A24_B45B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200114T051721_20200114T051748_030792_038823_473E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200108T051631_20200108T051659_019721_025492_DE65.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200102T051721_20200102T051748_030617_038202_AAE5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191227T051631_20191227T051659_019546_024F01_12D0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191221T051722_20191221T051749_030442_037BFC_C11F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191215T051632_20191215T051700_019371_024971_7C23.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191209T051722_20191209T051749_030267_0375EF_2CCC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191203T051632_20191203T051700_019196_0243E2_BD70.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191127T051722_20191127T051750_030092_036FF1_C115.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191121T051633_20191121T051701_019021_023E50_5836.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191115T051723_20191115T051750_029917_0369DD_8484.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191109T051633_20191109T051701_018846_0238AF_2298.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191103T051723_20191103T051750_029742_0363BA_806C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191028T051641_20191028T051708_018671_023301_11AA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191022T051723_20191022T051750_029567_035D9D_45A6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191016T051641_20191016T051708_018496_022DA0_75C1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191010T051723_20191010T051750_029392_035792_52EA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191004T051641_20191004T051708_018321_022835_1638.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190928T051723_20190928T051750_029217_035192_E7F2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190922T051641_20190922T051708_018146_0222BC_DCDC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190916T051722_20190916T051749_029042_034B99_CF5C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190910T051640_20190910T051707_017971_021D59_8B84.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190904T051722_20190904T051749_028867_034583_4123.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190829T051640_20190829T051707_017796_0217D9_028C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190823T051721_20190823T051748_028692_033F61_E3C1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190817T051639_20190817T051706_017621_02126A_63B7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190811T051721_20190811T051748_028517_033959_768F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190805T051638_20190805T051705_017446_020CFF_91D7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190730T051720_20190730T051747_028342_0333DA_76EC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190724T051638_20190724T051705_017271_0207BA_13DF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190718T051719_20190718T051746_028167_032E7E_D9F6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190712T051637_20190712T051704_017096_0202A5_185A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190706T051718_20190706T051745_027992_032936_2CE9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190630T051636_20190630T051703_016921_01FD7F_EDB2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190624T051717_20190624T051745_027817_0323E3_4E9A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190618T051635_20190618T051703_016746_01F850_FBB1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190612T051717_20190612T051744_027642_031EB1_E326.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190606T051635_20190606T051702_016571_01F31D_947A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190531T051716_20190531T051743_027467_03195C_C9D9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190525T051634_20190525T051701_016396_01EDDA_779B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190519T051716_20190519T051743_027292_0313E9_150A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190513T051640_20190513T051707_016221_01E872_B8BA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190507T051715_20190507T051742_027117_030E71_2FC8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190501T051640_20190501T051707_016046_01E2D7_5BA0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190425T051715_20190425T051742_026942_030810_CBEE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190419T051639_20190419T051706_015871_01DCFE_42AD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190413T051714_20190413T051741_026767_0301BE_8E93.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190407T051639_20190407T051705_015696_01D735_09AB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190401T051714_20190401T051741_026592_02FB56_D825.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190326T051638_20190326T051705_015521_01D16C_55B4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190320T051713_20190320T051740_026417_02F4DE_D78A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190314T051638_20190314T051705_015346_01CBB4_8BAF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190308T051713_20190308T051740_026242_02EE6B_4A3B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190302T051638_20190302T051705_015171_01C5F9_4F96.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190224T051713_20190224T051740_026067_02E820_7CF4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190218T051638_20190218T051705_014996_01C042_43E8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190212T051713_20190212T051740_025892_02E1E6_E908.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190206T051638_20190206T051705_014821_01BA82_77A3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190131T051714_20190131T051741_025717_02DBAB_05C6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190125T051639_20190125T051706_014646_01B4C3_C9AD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190119T051714_20190119T051741_025542_02D546_B0C4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190113T051639_20190113T051706_014471_01AF2D_94D4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190107T051714_20190107T051741_025367_02CEF3_C08B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190101T051639_20190101T051706_014296_01A98A_AE29.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181226T051715_20181226T051742_025192_02C8A1_158A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181220T051640_20181220T051707_014121_01A3BB_B701.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181214T051715_20181214T051742_025017_02C24E_9197.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181208T051640_20181208T051707_013946_019DFF_E480.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181202T051716_20181202T051743_024842_02BC38_6B65.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181120T051716_20181120T051743_024667_02B608_DA3A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181114T051635_20181114T051702_013596_0192BC_D1C4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181108T051716_20181108T051744_024492_02AF94_4E9A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181102T051635_20181102T051702_013421_018D4D_E665.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181027T051717_20181027T051744_024317_02A97B_8E65.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181021T051635_20181021T051702_013246_0187CB_13D2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181015T051717_20181015T051744_024142_02A3DE_9967.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181003T051716_20181003T051743_023967_029E22_2248.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180927T051640_20180927T051707_012896_017D0E_8CCD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180921T051716_20180921T051743_023792_02986D_BE33.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180915T051634_20180915T051701_012721_0177AA_12DC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180909T051716_20180909T051743_023617_0292CA_673A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180903T051634_20180903T051701_012546_017252_09B8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180828T051715_20180828T051742_023442_028D30_0218.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180822T051633_20180822T051700_012371_016CE7_EE47.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180816T051715_20180816T051742_023267_028792_4F0C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180810T051632_20180810T051659_012196_016778_F01D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180804T051714_20180804T051741_023092_0281EF_F9BC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180729T051632_20180729T051659_012021_01621D_E96C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180723T051713_20180723T051740_022917_027C74_14FE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180717T051631_20180717T051658_011846_015CDA_541A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180711T051712_20180711T051740_022742_0276FD_16DD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180705T051622_20180705T051649_011671_015775_15D8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180629T051712_20180629T051739_022567_0271CF_4A6C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180623T051635_20180623T051702_011496_0151FF_F5BE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180617T051711_20180617T051738_022392_026CB5_BE6A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180611T051634_20180611T051701_011321_014C98_F418.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180605T051710_20180605T051737_022217_026754_4CAF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180530T051633_20180530T051701_011146_01471D_9B4A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180524T051710_20180524T051737_022042_0261CB_ED09.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180518T051634_20180518T051701_010971_014165_4274.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180512T051709_20180512T051736_021867_025C3D_3DEF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180506T051633_20180506T051700_010796_013BC2_0180.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180430T051708_20180430T051735_021692_0256A6_B0D8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180424T051632_20180424T051659_010621_01361C_52F2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180418T051708_20180418T051735_021517_02512E_0B1E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180412T051632_20180412T051659_010446_01308A_BB39.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180406T051707_20180406T051734_021342_024BAF_0F59.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180331T051632_20180331T051659_010271_012AD8_5E20.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180325T051707_20180325T051734_021167_024634_F9BA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180319T051631_20180319T051658_010096_01252E_6136.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180313T051707_20180313T051734_020992_0240A5_C14E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180307T051631_20180307T051658_009921_011F78_899D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180301T051707_20180301T051734_020817_023B1C_D29A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180223T051631_20180223T051658_009746_01199E_0A5E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180217T051707_20180217T051734_020642_02358D_D244.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180211T051632_20180211T051659_009571_0113DC_860E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180205T051707_20180205T051734_020467_022FF9_5685.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180124T051707_20180124T051734_020292_022A63_E823.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180118T051632_20180118T051659_009221_01085B_8B19.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180112T051708_20180112T051735_020117_0224D4_0F3E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171231T051708_20171231T051735_019942_021F4D_4620.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171225T051633_20171225T051700_008871_00FCF9_214B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171219T051709_20171219T051736_019767_0219DF_36F5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171213T051634_20171213T051700_008696_00F760_3FD6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171207T051709_20171207T051736_019592_02146A_15B5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171201T051634_20171201T051701_008521_00F1D4_738C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171125T051710_20171125T051737_019417_020EF4_16F9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171113T051710_20171113T051737_019242_02096B_9ACC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171101T051710_20171101T051737_019067_020403_C405.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171026T051634_20171026T051701_007996_00E206_5982.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171020T051710_20171020T051737_018892_01FEAF_4FE8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171014T051634_20171014T051701_007821_00DCF9_E5A6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171008T051710_20171008T051737_018717_01F94B_89C3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171002T051633_20171002T051700_007646_00D808_A225.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170926T051710_20170926T051737_018542_01F402_CD67.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170920T051633_20170920T051700_007471_00D308_06F0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170914T051709_20170914T051736_018367_01EEA0_66D3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170908T051632_20170908T051700_007296_00CDE8_F6ED.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170902T051709_20170902T051736_018192_01E929_26DF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170827T051632_20170827T051659_007121_00C8CF_459C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170821T051708_20170821T051735_018017_01E3E6_6A46.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170815T051631_20170815T051659_006946_00C3BF_E38B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170809T051708_20170809T051735_017842_01DE9A_BB0D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170803T051631_20170803T051658_006771_00BEA2_0C95.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170728T051707_20170728T051734_017667_01D93F_4120.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170722T051630_20170722T051657_006596_00B99E_C820.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170716T051706_20170716T051733_017492_01D3E5_8239.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170710T051630_20170710T051657_006421_00B49D_093E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170704T051706_20170704T051733_017317_01CE9C_202E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170628T051629_20170628T051656_006246_00AFAD_BD88.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170622T051705_20170622T051732_017142_01C94D_D421.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170616T051628_20170616T051655_006071_00AA9B_3A5F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170610T051704_20170610T051732_016967_01C3F0_B3D1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170604T051627_20170604T051655_005896_00A574_10B0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170529T051704_20170529T051731_016792_01BE84_777E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170523T051627_20170523T051654_005721_00A061_D1AD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170517T051652_20170517T051719_016617_01B920_C9CF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170511T051626_20170511T051653_005546_009B6E_8B5B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170505T051651_20170505T051719_016442_01B3C6_FC1D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170429T051626_20170429T051653_005371_0096A0_DF28.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170423T051651_20170423T051718_016267_01AE7F_6BC8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170417T051626_20170417T051653_005196_009180_E2F9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170411T051650_20170411T051717_016092_01A924_8B88.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170405T051625_20170405T051652_005021_008C81_6F70.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170330T051650_20170330T051717_015917_01A3D8_D5D3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170324T051625_20170324T051652_004846_008771_7D7D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170318T051649_20170318T051716_015742_019EA4_C5BE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170312T051625_20170312T051652_004671_00825E_BC78.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170306T051649_20170306T051716_015567_01996C_1E3B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170228T051625_20170228T051651_004496_007D39_EB97.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170222T051649_20170222T051716_015392_019421_A4A4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170216T051625_20170216T051652_004321_00780F_03C3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170210T051649_20170210T051716_015217_018EB5_B6CE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170204T051625_20170204T051652_004146_0072C8_40BA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170129T051650_20170129T051717_015042_018943_D6AA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170123T051625_20170123T051652_003971_006DA3_7C47.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170111T051626_20170111T051653_003796_006869_A744.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170105T051650_20170105T051717_014692_017E7C_784A.zip" ]

        # Local stash of cookies so we don't always have to ask
        self.cookie_jar_path = os.path.join( os.path.expanduser('~'), ".bulk_download_cookiejar.txt")
        self.cookie_jar = None

        self.asf_urs4 = { 'url': 'https://urs.earthdata.nasa.gov/oauth/authorize',
                 'client': 'BO_n7nTIlMljdvU6kRRB3g',
                 'redir': 'https://auth.asf.alaska.edu/login'}

        # Make sure we can write it our current directory
        if os.access(os.getcwd(), os.W_OK) is False:
            print ("WARNING: Cannot write to current path! Check permissions for {0}".format(os.getcwd()))
            exit(-1)

        # For SSL
        self.context = {}

        # Check if user handed in a Metalink or CSV:
        if len(sys.argv) > 0:
            download_files = []
            input_files = []
            for arg in sys.argv[1:]:
                if arg == '--insecure':
                    try:
                        ctx = ssl.create_default_context()
                        ctx.check_hostname = False
                        ctx.verify_mode = ssl.CERT_NONE
                        self.context['context'] = ctx
                    except AttributeError:
                        # Python 2.6 won't complain about SSL Validation
                        pass

                elif arg.endswith('.metalink') or arg.endswith('.csv'):
                    if os.path.isfile( arg ):
                        input_files.append( arg )
                        if arg.endswith('.metalink'):
                            new_files = self.process_metalink(arg)
                        else:
                            new_files = self.process_csv(arg)
                        if new_files is not None:
                            for file_url in (new_files):
                                download_files.append( file_url )
                    else:
                         print (" > I cannot find the input file you specified: {0}".format(arg))
                else:
                    print (" > Command line argument '{0}' makes no sense, ignoring.".format(arg))

            if len(input_files) > 0:
                if len(download_files) > 0:
                    print (" > Processing {0} downloads from {1} input files. ".format(len(download_files), len(input_files)))
                    self.files = download_files
                else:
                    print (" > I see you asked me to download files from {0} input files, but they had no downloads!".format(len(input_files)))
                    print (" > I'm super confused and exiting.")
                    exit(-1)

        # Make sure cookie_jar is good to go!
        self.get_cookie()

         # summary
        self.total_bytes = 0
        self.total_time = 0
        self.cnt = 0
        self.success = []
        self.failed = []
        self.skipped = []


    # Get and validate a cookie
    def get_cookie(self):
       if os.path.isfile(self.cookie_jar_path):
          self.cookie_jar = MozillaCookieJar()
          self.cookie_jar.load(self.cookie_jar_path)

          # make sure cookie is still valid
          if self.check_cookie():
             print(" > Reusing previous cookie jar.")
             return True
          else:
             print(" > Could not validate old cookie Jar")

       # We don't have a valid cookie, prompt user or creds
       print ("No existing URS cookie found, please enter Earthdata username & password:")
       print ("(Credentials will not be stored, saved or logged anywhere)")

       # Keep trying 'till user gets the right U:P
       while self.check_cookie() is False:
          self.get_new_cookie()

       return True

    # Validate cookie before we begin
    def check_cookie(self):

       if self.cookie_jar is None:
          print (" > Cookiejar is bunk: {0}".format(self.cookie_jar))
          return False

       # File we know is valid, used to validate cookie
       file_check = 'https://urs.earthdata.nasa.gov/profile'

       # Apply custom Redirect Hanlder
       opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
       install_opener(opener)

       # Attempt a HEAD request
       request = Request(file_check)
       request.get_method = lambda : 'HEAD'
       try:
          print (" > attempting to download {0}".format(file_check))
          response = urlopen(request, timeout=30)
          resp_code = response.getcode()
          # Make sure we're logged in
          if not self.check_cookie_is_logged_in(self.cookie_jar):
             return False

          # Save cookiejar
          self.cookie_jar.save(self.cookie_jar_path)

       except HTTPError:
          # If we ge this error, again, it likely means the user has not agreed to current EULA
          print ("\nIMPORTANT: ")
          print ("Your user appears to lack permissions to download data from the ASF Datapool.")
          print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
          exit(-1)

       # This return codes indicate the USER has not been approved to download the data
       if resp_code in (300, 301, 302, 303):
          try:
             redir_url = response.info().getheader('Location')
          except AttributeError:
             redir_url = response.getheader('Location')

          #Funky Test env:
          if ("vertex-retired.daac.asf.alaska.edu" in redir_url and "test" in self.asf_urs4['redir']):
             print ("Cough, cough. It's dusty in this test env!")
             return True

          print ("Redirect ({0}) occured, invalid cookie value!".format(resp_code))
          return False

       # These are successes!
       if resp_code in (200, 307):
          return True

       return False

    def get_new_cookie(self):
       # Start by prompting user to input their credentials

       # Another Python2/3 workaround
       try:
          new_username = raw_input("Username: ")
       except NameError:
          new_username = input("Username: ")
       new_password = getpass.getpass(prompt="Password (will not be displayed): ")

       # Build URS4 Cookie request
       auth_cookie_url = self.asf_urs4['url'] + '?client_id=' + self.asf_urs4['client'] + '&redirect_uri=' + self.asf_urs4['redir'] + '&response_type=code&state='

       try:
          #python2
          user_pass = base64.b64encode (bytes(new_username+":"+new_password))
       except TypeError:
          #python3
          user_pass = base64.b64encode (bytes(new_username+":"+new_password, "utf-8"))
          user_pass = user_pass.decode("utf-8")

       # Authenticate against URS, grab all the cookies
       self.cookie_jar = MozillaCookieJar()
       opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
       request = Request(auth_cookie_url, headers={"Authorization": "Basic {0}".format(user_pass)})

       # Watch out cookie rejection!
       try:
          response = opener.open(request)
       except HTTPError as e:
          if "WWW-Authenticate" in e.headers and "Please enter your Earthdata Login credentials" in e.headers["WWW-Authenticate"]:
             print (" > Username and Password combo was not successful. Please try again.")
             return False
          else:
             # If an error happens here, the user most likely has not confirmed EULA.
             print ("\nIMPORTANT: There was an error obtaining a download cookie!")
             print ("Your user appears to lack permission to download data from the ASF Datapool.")
             print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
             exit(-1)
       except URLError as e:
          print ("\nIMPORTANT: There was a problem communicating with URS, unable to obtain cookie. ")
          print ("Try cookie generation later.")
          exit(-1)

       # Did we get a cookie?
       if self.check_cookie_is_logged_in(self.cookie_jar):
          #COOKIE SUCCESS!
          self.cookie_jar.save(self.cookie_jar_path)
          return True

       # if we aren't successful generating the cookie, nothing will work. Stop here!
       print ("WARNING: Could not generate new cookie! Cannot proceed. Please try Username and Password again.")
       print ("Response was {0}.".format(response.getcode()))
       print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
       exit(-1)

    # make sure we're logged into URS
    def check_cookie_is_logged_in(self, cj):
       for cookie in cj:
          if cookie.name == 'urs_user_already_logged':
              # Only get this cookie if we logged in successfully!
              return True

       return False


    # Download the file
    def download_file_with_cookiejar(self, url, file_count, total, recursion=False):
       # see if we've already download this file and if it is that it is the correct size
       download_file = os.path.basename(url).split('?')[0]
       if os.path.isfile(download_file):
          try:
             request = Request(url)
             request.get_method = lambda : 'HEAD'
             response = urlopen(request, timeout=30)
             remote_size = self.get_total_size(response)
             # Check that we were able to derive a size.
             if remote_size:
                 local_size = os.path.getsize(download_file)
                 if remote_size < (local_size+(local_size*.01)) and remote_size > (local_size-(local_size*.01)):
                     print (" > Download file {0} exists! \n > Skipping download of {1}. ".format(download_file, url))
                     return None,None
                 #partial file size wasn't full file size, lets blow away the chunk and start again
                 print (" > Found {0} but it wasn't fully downloaded. Removing file and downloading again.".format(download_file))
                 os.remove(download_file)

          except ssl.CertificateError as e:
             print (" > ERROR: {0}".format(e))
             print (" > Could not validate SSL Cert. You may be able to overcome this using the --insecure flag")
             return False,None

          except HTTPError as e:
             if e.code == 401:
                 print (" > IMPORTANT: Your user may not have permission to download this type of data!")
             else:
                 print (" > Unknown Error, Could not get file HEAD: {0}".format(e))

          except URLError as e:
             print ("URL Error (from HEAD): {0}, {1}".format( e.reason, url))
             if "ssl.c" in "{0}".format(e.reason):
                 print ("IMPORTANT: Remote location may not be accepting your SSL configuration. This is a terminal error.")
             return False,None

       # attempt https connection
       try:
          request = Request(url)
          response = urlopen(request, timeout=30)

          # Watch for redirect
          if response.geturl() != url:

             # See if we were redirect BACK to URS for re-auth.
             if 'https://urs.earthdata.nasa.gov/oauth/authorize' in response.geturl():

                 if recursion:
                     print (" > Entering seemingly endless auth loop. Aborting. ")
                     return False, None

                 # make this easier. If there is no app_type=401, add it
                 new_auth_url = response.geturl()
                 if "app_type" not in new_auth_url:
                     new_auth_url += "&app_type=401"

                 print (" > While attempting to download {0}....".format(url))
                 print (" > Need to obtain new cookie from {0}".format(new_auth_url))
                 old_cookies = [cookie.name for cookie in self.cookie_jar]
                 opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
                 request = Request(new_auth_url)
                 try:
                     response = opener.open(request)
                     for cookie in self.cookie_jar:
                         if cookie.name not in old_cookies:
                              print (" > Saved new cookie: {0}".format(cookie.name))

                              # A little hack to save session cookies
                              if cookie.discard:
                                   cookie.expires = int(time.time()) + 60*60*24*30
                                   print (" > Saving session Cookie that should have been discarded! ")

                     self.cookie_jar.save(self.cookie_jar_path, ignore_discard=True, ignore_expires=True)
                 except HTTPError as e:
                     print ("HTTP Error: {0}, {1}".format( e.code, url))
                     return False,None

                 # Okay, now we have more cookies! Lets try again, recursively!
                 print (" > Attempting download again with new cookies!")
                 return self.download_file_with_cookiejar(url, file_count, total, recursion=True)

             print (" > 'Temporary' Redirect download @ Remote archive:\n > {0}".format(response.geturl()))

          # seems to be working
          print ("({0}/{1}) Downloading {2}".format(file_count, total, url))

          # Open our local file for writing and build status bar
          tf = tempfile.NamedTemporaryFile(mode='w+b', delete=False, dir='.')
          self.chunk_read(response, tf, report_hook=self.chunk_report)

          # Reset download status
          sys.stdout.write('\n')

          tempfile_name = tf.name
          tf.close()

       #handle errors
       except HTTPError as e:
          print ("HTTP Error: {0}, {1}".format( e.code, url))

          if e.code == 401:
             print (" > IMPORTANT: Your user does not have permission to download this type of data!")

          if e.code == 403:
             print (" > Got a 403 Error trying to download this file.  ")
             print (" > You MAY need to log in this app and agree to a EULA. ")

          return False,None

       except URLError as e:
          print ("URL Error (from GET): {0}, {1}, {2}".format(e, e.reason, url))
          if "ssl.c" in "{0}".format(e.reason):
              print ("IMPORTANT: Remote location may not be accepting your SSL configuration. This is a terminal error.")
          return False,None

       except socket.timeout as e:
           print (" > timeout requesting: {0}; {1}".format(url, e))
           return False,None

       except ssl.CertificateError as e:
          print (" > ERROR: {0}".format(e))
          print (" > Could not validate SSL Cert. You may be able to overcome this using the --insecure flag")
          return False,None

       # Return the file size
       shutil.copy(tempfile_name, download_file)
       os.remove(tempfile_name)
       file_size = self.get_total_size(response)
       actual_size = os.path.getsize(download_file)
       if file_size is None:
           # We were unable to calculate file size.
           file_size = actual_size
       return actual_size,file_size

    def get_redirect_url_from_error(self, error):
       find_redirect = re.compile(r"id=\"redir_link\"\s+href=\"(\S+)\"")
       print ("error file was: {}".format(error))
       redirect_url = find_redirect.search(error)
       if redirect_url:
          print("Found: {0}".format(redirect_url.group(0)))
          return (redirect_url.group(0))

       return None


    #  chunk_report taken from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook
    def chunk_report(self, bytes_so_far, file_size):
       if file_size is not None:
           percent = float(bytes_so_far) / file_size
           percent = round(percent*100, 2)
           sys.stdout.write(" > Downloaded %d of %d bytes (%0.2f%%)\r" %
               (bytes_so_far, file_size, percent))
       else:
           # We couldn't figure out the size.
           sys.stdout.write(" > Downloaded %d of unknown Size\r" % (bytes_so_far))

    #  chunk_read modified from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook
    def chunk_read(self, response, local_file, chunk_size=8192, report_hook=None):
       file_size = self.get_total_size(response)
       bytes_so_far = 0

       while 1:
          try:
             chunk = response.read(chunk_size)
          except:
             sys.stdout.write("\n > There was an error reading data. \n")
             break

          try:
             local_file.write(chunk)
          except TypeError:
             local_file.write(chunk.decode(local_file.encoding))
          bytes_so_far += len(chunk)

          if not chunk:
             break

          if report_hook:
             report_hook(bytes_so_far, file_size)

       return bytes_so_far

    def get_total_size(self, response):
       try:
          file_size = response.info().getheader('Content-Length').strip()
       except AttributeError:
          try:
             file_size = response.getheader('Content-Length').strip()
          except AttributeError:
             print ("> Problem getting size")
             return None

       return int(file_size)


    # Get download urls from a metalink file
    def process_metalink(self, ml_file):
       print ("Processing metalink file: {0}".format(ml_file))
       with open(ml_file, 'r') as ml:
          xml = ml.read()

       # Hack to remove annoying namespace
       it = ET.iterparse(StringIO(xml))
       for _, el in it:
          if '}' in el.tag:
             el.tag = el.tag.split('}', 1)[1]  # strip all namespaces
       root = it.root

       dl_urls = []
       ml_files = root.find('files')
       for dl in ml_files:
          dl_urls.append(dl.find('resources').find('url').text)

       if len(dl_urls) > 0:
          return dl_urls
       else:
          return None

    # Get download urls from a csv file
    def process_csv(self, csv_file):
       print ("Processing csv file: {0}".format(csv_file))

       dl_urls = []
       with open(csv_file, 'r') as csvf:
          try:
             csvr = csv.DictReader(csvf)
             for row in csvr:
                dl_urls.append(row['URL'])
          except csv.Error as e:
             print ("WARNING: Could not parse file %s, line %d: %s. Skipping." % (csv_file, csvr.line_num, e))
             return None
          except KeyError as e:
             print ("WARNING: Could not find URL column in file %s. Skipping." % (csv_file))

       if len(dl_urls) > 0:
          return dl_urls
       else:
          return None

    # Download all the files in the list
    def download_files(self):
        for file_name in self.files:

            # make sure we haven't ctrl+c'd or some other abort trap
            if abort == True:
              raise SystemExit

            # download counter
            self.cnt += 1

            # set a timer
            start = time.time()

            # run download
            size,total_size = self.download_file_with_cookiejar(file_name, self.cnt, len(self.files))

            # calculte rate
            end = time.time()

            # stats:
            if size is None:
                self.skipped.append(file_name)
            # Check to see that the download didn't error and is the correct size
            elif size is not False and (total_size < (size+(size*.01)) and total_size > (size-(size*.01))):
                # Download was good!
                elapsed = end - start
                elapsed = 1.0 if elapsed < 1 else elapsed
                rate = (size/1024**2)/elapsed

                print ("Downloaded {0}b in {1:.2f}secs, Average Rate: {2:.2f}MB/sec".format(size, elapsed, rate))

                # add up metrics
                self.total_bytes += size
                self.total_time += elapsed
                self.success.append( {'file':file_name, 'size':size } )

            else:
                print ("There was a problem downloading {0}".format(file_name))
                self.failed.append(file_name)

    def print_summary(self):
        # Print summary:
        print ("\n\nDownload Summary ")
        print ("--------------------------------------------------------------------------------")
        print ("  Successes: {0} files, {1} bytes ".format(len(self.success), self.total_bytes))
        for success_file in self.success:
           print ("           - {0}  {1:.2f}MB".format(success_file['file'],(success_file['size']/1024.0**2)))
        if len(self.failed) > 0:
           print ("  Failures: {0} files".format(len(self.failed)))
           for failed_file in self.failed:
              print ("          - {0}".format(failed_file))
        if len(self.skipped) > 0:
           print ("  Skipped: {0} files".format(len(self.skipped)))
           for skipped_file in self.skipped:
              print ("          - {0}".format(skipped_file))
        if len(self.success) > 0:
           print ("  Average Rate: {0:.2f}MB/sec".format( (self.total_bytes/1024.0**2)/self.total_time))
        print ("--------------------------------------------------------------------------------")


if __name__ == "__main__":
    # Setup a signal trap for SIGINT (Ctrl+C)
    signal.signal(signal.SIGINT, signal_handler)

    downloader = bulk_downloader()
    downloader.download_files()
    downloader.print_summary()
