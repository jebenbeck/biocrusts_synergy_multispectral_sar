#!/usr/bin/python

# Usage:
#
#    In a terminal/command line, cd to the directory where this file lives. Then...
#
#    With embedded urls: ( download the hardcoded list of files in the 'files =' block below)
#
#       python ./download-all-2022-02-10_20-06-09.py
#
#    Download all files in a Metalink/CSV: (downloaded from ASF Vertex)
#
#       python ./download-all-2022-02-10_20-06-09.py /path/to/downloads.metalink localmetalink.metalink localcsv.csv
#
#    Compatibility: python >= 2.6.5, 2.7.5, 3.0
#
#    If downloading from a trusted source with invalid SSL Certs, use --insecure to ignore
#
#    For more information on bulk downloads, navigate to:
#        https://asf.alaska.edu/how-to/data-tools/data-tools/#bulk_download
#
#
#
#    This script was generated by the Alaska Satellite Facility's bulk download service.
#    For more information on the service, navigate to:
#        http://bulk-download.asf.alaska.edu/help
#

import sys, csv
import os, os.path
import tempfile, shutil
import re

import base64
import time
import getpass
import ssl
import signal
import socket

import xml.etree.ElementTree as ET

#############
# This next block is a bunch of Python 2/3 compatability

try:
   # Python 2.x Libs
   from urllib2 import build_opener, install_opener, Request, urlopen, HTTPError
   from urllib2 import URLError, HTTPSHandler,  HTTPHandler, HTTPCookieProcessor

   from cookielib import MozillaCookieJar
   from StringIO import StringIO

except ImportError as e:

   # Python 3.x Libs
   from urllib.request import build_opener, install_opener, Request, urlopen
   from urllib.request import HTTPHandler, HTTPSHandler, HTTPCookieProcessor
   from urllib.error import HTTPError, URLError

   from http.cookiejar import MozillaCookieJar
   from io import StringIO

###
# Global variables intended for cross-thread modification
abort = False

###
# A routine that handles trapped signals
def signal_handler(sig, frame):
    global abort
    sys.stderr.output("\n > Caught Signal. Exiting!\n")
    abort = True # necessary to cause the program to stop
    raise SystemExit  # this will only abort the thread that the ctrl+c was caught in

class bulk_downloader:
    def __init__(self):
        # List of files to download
        self.files = [ "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211228T061056_20211228T061123_041205_04E588_04B3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211222T061009_20211222T061036_030134_039922_D48A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211216T061057_20211216T061124_041030_04DFB8_7590.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211210T061010_20211210T061037_029959_039396_CB00.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211204T061057_20211204T061124_040855_04D9C8_57D7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211128T061010_20211128T061037_029784_038E12_7BB8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211122T061058_20211122T061125_040680_04D3AB_5FB7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211116T061011_20211116T061038_029609_038892_95DD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211110T061058_20211110T061125_040505_04CDA8_EC1B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211104T061011_20211104T061038_029434_038339_26E7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211029T061058_20211029T061125_040330_04C787_DD85.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211023T061011_20211023T061038_029259_037DDE_15B6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211017T061059_20211017T061126_040155_04C174_CF73.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211011T061011_20211011T061038_029084_037872_49C5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211005T061058_20211005T061125_039980_04BB68_A041.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210929T061011_20210929T061038_028909_037336_D719.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210923T061058_20210923T061125_039805_04B546_28E7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210917T061011_20210917T061038_028734_036DD4_03A6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210911T061058_20210911T061125_039630_04AF63_7575.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210905T061010_20210905T061037_028559_036877_C2B1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210830T061057_20210830T061124_039455_04A951_111F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210824T061010_20210824T061037_028384_036300_94BC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210818T061057_20210818T061124_039280_04A362_9CFB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210812T061009_20210812T061036_028209_035D81_E06E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210806T061056_20210806T061123_039105_049D50_0B21.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210731T061008_20210731T061035_028034_03581B_3112.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210725T061055_20210725T061122_038930_0497F0_E37D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210719T061008_20210719T061035_027859_035300_13DA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210713T061055_20210713T061122_038755_0492B5_9A5C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210707T061007_20210707T061034_027684_034DCC_A7E4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210701T061054_20210701T061121_038580_048D6A_3F43.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210625T061006_20210625T061033_027509_0348A8_5C5D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210619T061053_20210619T061120_038405_04882D_DAC9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210613T061006_20210613T061032_027334_0343BC_A035.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210607T061052_20210607T061119_038230_0482F9_227B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210601T061005_20210601T061032_027159_033E7B_D660.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210526T061052_20210526T061119_038055_047DC6_1CC0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210520T061004_20210520T061031_026984_033949_3417.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210514T061051_20210514T061118_037880_04787B_5530.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210508T061003_20210508T061030_026809_0333DD_4600.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210502T061050_20210502T061117_037705_0472FE_02DE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210426T061003_20210426T061030_026634_032E3F_FF1B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210420T061050_20210420T061117_037530_046CE9_C838.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210414T061002_20210414T061029_026459_0328A4_82D4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210408T061049_20210408T061116_037355_0466D6_6A58.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210402T061002_20210402T061029_026284_03230F_1A1B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210327T061049_20210327T061116_037180_0460CF_67BE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210321T061002_20210321T061028_026109_031D88_8780.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210315T061049_20210315T061116_037005_045AC1_8C95.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210309T061001_20210309T061028_025934_0317E8_1C15.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210303T061049_20210303T061116_036830_0454A6_AE8A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210225T061001_20210225T061028_025759_03122C_469E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210219T061049_20210219T061116_036655_044E99_14B2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210207T061049_20210207T061116_036480_04487A_71B6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210126T061050_20210126T061117_036305_04426C_2516.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210120T061002_20210120T061029_025234_03012B_D3E9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210114T061050_20210114T061117_036130_043C59_EEBC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210108T061003_20210108T061030_025059_02FB91_5048.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210102T061051_20210102T061118_035955_04362E_6521.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201227T061003_20201227T061030_024884_02F5F6_1D6E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201221T061051_20201221T061118_035780_04301A_AF75.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201215T061004_20201215T061031_024709_02F04C_2DB5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201209T061052_20201209T061119_035605_042A19_1B9A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201203T061005_20201203T061032_024534_02EA9C_D8DE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201127T061052_20201127T061119_035430_04240B_EF16.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201121T061005_20201121T061032_024359_02E50F_4FB3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201115T061053_20201115T061120_035255_041E02_8292.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201109T061005_20201109T061032_024184_02DF8F_832C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201103T061053_20201103T061120_035080_0417E6_815B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201028T061005_20201028T061032_024009_02DA2A_5EA5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201022T061053_20201022T061120_034905_0411DD_E752.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201016T061005_20201016T061032_023834_02D4A9_4DDD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201010T061053_20201010T061120_034730_040BCB_E1C7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201004T061005_20201004T061032_023659_02CF3D_8056.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200928T061053_20200928T061120_034555_0405AB_E64B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200922T061005_20200922T061032_023484_02C9BF_1734.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200916T061052_20200916T061119_034380_03FF7A_EBE0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200910T061005_20200910T061032_023309_02C443_FCF7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200904T061052_20200904T061119_034205_03F951_49D3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200829T061004_20200829T061031_023134_02BECB_BD72.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200823T061051_20200823T061118_034030_03F32A_25FF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200817T061003_20200817T061030_022959_02B949_536C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200811T061050_20200811T061117_033855_03ED02_A97C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200805T061003_20200805T061030_022784_02B3DF_95DC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200730T061050_20200730T061117_033680_03E746_5FD9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200724T061002_20200724T061029_022609_02AE8E_3F00.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200718T061049_20200718T061116_033505_03E1E8_C5F7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200712T061001_20200712T061028_022434_02A93F_9025.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200706T061048_20200706T061115_033330_03DC8D_EAA0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200630T061000_20200630T061027_022259_02A3EF_E4B7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200624T061048_20200624T061115_033155_03D743_993B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200618T061000_20200618T061027_022084_029E8D_BA14.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200612T061047_20200612T061114_032980_03D1EE_0355.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200606T060959_20200606T061026_021909_029944_EE08.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200531T061046_20200531T061113_032805_03CCC1_37EE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200525T060958_20200525T061025_021734_029403_296F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200519T061045_20200519T061112_032630_03C775_000C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200513T060958_20200513T061025_021559_028EE8_2E84.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200507T061045_20200507T061112_032455_03C224_0DAB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200501T060957_20200501T061024_021384_028978_2248.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200425T061044_20200425T061111_032280_03BC11_C1BB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200419T060957_20200419T061024_021209_0283EF_D9CB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200413T061044_20200413T061111_032105_03B5EF_6802.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200407T060956_20200407T061023_021034_027E6A_601B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200401T061043_20200401T061110_031930_03AFC3_5EAF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200320T061043_20200320T061110_031755_03A999_2B4C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200314T060956_20200314T061023_020684_027359_EE9E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200308T061043_20200308T061110_031580_03A378_FDA1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200302T060955_20200302T061022_020509_026DCD_0919.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200225T061043_20200225T061110_031405_039D6D_2143.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200219T060956_20200219T061023_020334_02682C_1C50.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200213T061043_20200213T061110_031230_039764_855B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200207T060956_20200207T061023_020159_02628D_5CB7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200201T061043_20200201T061110_031055_039150_ADDA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200126T060956_20200126T061023_019984_025CDC_B963.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200120T061044_20200120T061111_030880_038B34_DA5E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200114T060957_20200114T061024_019809_025745_6228.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200108T061044_20200108T061111_030705_03850D_6886.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200102T060957_20200102T061024_019634_0251B0_57F1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191227T061045_20191227T061112_030530_037EFE_495D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191221T060958_20191221T061025_019459_024C21_6E6C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191215T061045_20191215T061112_030355_0378F7_853F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191209T060958_20191209T061025_019284_02468F_2D81.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191203T061046_20191203T061113_030180_0372EA_37A2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191127T060959_20191127T061026_019109_024106_BD28.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191121T061046_20191121T061113_030005_036CD8_0860.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191115T060959_20191115T061026_018934_023B68_6EBC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191109T061046_20191109T061113_029830_0366CE_DC09.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191103T060959_20191103T061026_018759_0235B9_5AF0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191028T061046_20191028T061113_029655_03609C_684C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191022T060959_20191022T061026_018584_023038_E468.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191016T061046_20191016T061113_029480_035A98_1847.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191010T060959_20191010T061026_018409_022AD7_042D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191004T061046_20191004T061113_029305_03548B_30E9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190928T060959_20190928T061026_018234_022559_98E1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190922T061046_20190922T061113_029130_034E86_0B6F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190916T060958_20190916T061025_018059_021FF5_E2BF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190910T061045_20190910T061112_028955_034891_5ABD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190904T060958_20190904T061025_017884_021A81_1E0E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190829T061045_20190829T061112_028780_03427A_2C17.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190817T061044_20190817T061111_028605_033C57_C64D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190811T060957_20190811T061024_017534_020F9D_028E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190805T061044_20190805T061111_028430_03366F_E897.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190730T060956_20190730T061023_017359_020A47_C24C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190724T061043_20190724T061110_028255_033115_288C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190718T060955_20190718T061022_017184_020521_D812.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190712T061042_20190712T061109_028080_032BCC_5F1C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190706T060955_20190706T061022_017009_020000_10BE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190630T061041_20190630T061108_027905_03267F_C79D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190624T060954_20190624T061021_016834_01FAD6_8837.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190618T061040_20190618T061107_027730_032145_7EF0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190612T060953_20190612T061020_016659_01F5A8_17B4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190606T061040_20190606T061107_027555_031C00_17C3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190531T060952_20190531T061019_016484_01F06E_575A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190519T060952_20190519T061019_016309_01EB1A_FDC4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190513T061039_20190513T061106_027205_031120_01F6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190501T061038_20190501T061105_027030_030B3F_5E0D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190425T060951_20190425T061018_015959_01DFD4_15EE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190419T061038_20190419T061105_026855_0304E2_29C7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190413T060950_20190413T061017_015784_01DA0A_5C76.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190407T061037_20190407T061104_026680_02FE88_4613.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190401T060950_20190401T061017_015609_01D439_2F25.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190326T061037_20190326T061104_026505_02F812_5E1F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190320T060949_20190320T061016_015434_01CE7D_8A0E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190314T061037_20190314T061104_026330_02F1A5_8021.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190308T060949_20190308T061016_015259_01C8CE_9D3B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190302T061037_20190302T061104_026155_02EB41_1448.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190224T060950_20190224T061016_015084_01C30C_09A9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190218T061037_20190218T061104_025980_02E4FA_25E4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190212T060949_20190212T061016_014909_01BD51_876B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190206T061037_20190206T061104_025805_02DEBC_1E55.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190131T060950_20190131T061017_014734_01B78F_9F13.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190125T061037_20190125T061104_025630_02D874_CEF9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190113T061038_20190113T061105_025455_02D20F_2A09.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190107T060951_20190107T061018_014384_01AC4D_0485.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190101T061038_20190101T061105_025280_02CBC7_863E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181226T060951_20181226T061018_014209_01A696_04BA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181220T061039_20181220T061106_025105_02C571_087F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181214T060951_20181214T061018_014034_01A0C6_6C15.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181208T061039_20181208T061106_024930_02BF1C_5020.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181202T060952_20181202T061019_013859_019B17_00C1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181126T061039_20181126T061106_024755_02B944_88BA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181120T060952_20181120T061019_013684_019579_0F95.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181114T061040_20181114T061107_024580_02B2D5_D0F0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181108T060952_20181108T061019_013509_018FF3_3795.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181102T061040_20181102T061107_024405_02AC6A_8AEF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181027T060953_20181027T061020_013334_018A78_3D91.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181021T061040_20181021T061107_024230_02A6A8_EC1E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181015T060953_20181015T061020_013159_01850B_AEE0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181009T061047_20181009T061115_024055_02A0F6_FCAC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181003T060953_20181003T061020_012984_017FB6_7B33.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180927T061040_20180927T061107_023880_029B31_E64E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180921T060952_20180921T061019_012809_017A59_414D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180915T061039_20180915T061106_023705_029586_FBEA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180909T060952_20180909T061019_012634_017500_4329.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180903T061039_20180903T061106_023530_028FEB_80B2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180828T060951_20180828T061018_012459_016F9A_CD6F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180822T061038_20180822T061105_023355_028A5C_EE6D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180816T060951_20180816T061018_012284_016A28_2F50.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180810T061038_20180810T061105_023180_0284B3_7214.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180804T060950_20180804T061017_012109_0164BE_A463.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180729T061037_20180729T061104_023005_027F3A_5FB7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180723T060949_20180723T061016_011934_015F78_CF05.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180717T061036_20180717T061103_022830_0279B2_B852.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180711T060948_20180711T061015_011759_015A23_CC66.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180705T061035_20180705T061102_022655_027466_62ED.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180629T060948_20180629T061015_011584_0154B5_36BD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180623T061035_20180623T061102_022480_026F49_CB87.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180617T060947_20180617T061014_011409_014F43_2093.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180611T061034_20180611T061101_022305_026A07_FB9E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180605T060946_20180605T061013_011234_0149EC_E7B6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180530T061033_20180530T061100_022130_026493_AD86.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180524T060946_20180524T061013_011059_014449_054A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180518T061033_20180518T061100_021955_025EF3_2E5B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180512T060945_20180512T061012_010884_013E97_8095.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180506T061032_20180506T061059_021780_025963_A1DC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180430T060944_20180430T061011_010709_0138F2_6CCB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180424T061032_20180424T061059_021605_0253D6_CC9B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180418T060944_20180418T061011_010534_013356_EB41.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180412T061031_20180412T061058_021430_024E63_CCB2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180406T060943_20180406T061010_010359_012DC0_E41E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180331T061031_20180331T061058_021255_0248EE_21DD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180325T060943_20180325T061010_010184_01280D_B757.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180319T061030_20180319T061057_021080_02435F_0DE6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180313T060943_20180313T061010_010009_012261_6511.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180307T061030_20180307T061057_020905_023DDA_962F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180301T060943_20180301T061010_009834_011C88_DA92.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180223T061030_20180223T061057_020730_02384E_D031.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180217T060943_20180217T061010_009659_0116BD_816A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180211T061030_20180211T061057_020555_0232BD_3524.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180205T060943_20180205T061010_009484_0110F8_9430.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180130T061031_20180130T061057_020380_022D20_EBAB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180124T060943_20180124T061010_009309_010B3B_90F4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180118T061031_20180118T061058_020205_022790_8340.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180112T060944_20180112T061011_009134_010585_58EF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180106T061031_20180106T061058_020030_022204_4FD4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171231T060944_20171231T061011_008959_00FFCD_B05B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171225T061032_20171225T061059_019855_021C78_4AEC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171219T060945_20171219T061012_008784_00FA33_68D9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171213T061032_20171213T061059_019680_021719_F659.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171207T060945_20171207T061012_008609_00F49B_3786.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171201T061033_20171201T061100_019505_02119C_5766.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171125T060945_20171125T061012_008434_00EF0C_51F5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171119T061033_20171119T061100_019330_020C24_E26D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171113T060946_20171113T061013_008259_00E9BB_5337.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171107T061033_20171107T061100_019155_0206A9_EE14.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171101T060946_20171101T061013_008084_00E48D_FC16.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171026T061033_20171026T061100_018980_02013C_45DC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171020T060946_20171020T061013_007909_00DF86_2546.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171014T061033_20171014T061100_018805_01FBED_7804.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171008T060946_20171008T061013_007734_00DA8D_EC34.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171002T061033_20171002T061100_018630_01F69D_FF82.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170926T060946_20170926T061013_007559_00D587_5133.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170920T061033_20170920T061100_018455_01F139_9DF6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170914T060945_20170914T061012_007384_00D07B_F1AA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170908T061032_20170908T061059_018280_01EBD7_AD51.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170902T060945_20170902T061012_007209_00CB57_C33B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170827T061032_20170827T061059_018105_01E680_C167.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170821T060944_20170821T061011_007034_00C646_8A89.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170815T061032_20170815T061058_017930_01E135_CA1D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170809T060944_20170809T061011_006859_00C12F_D89E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170803T061031_20170803T061058_017755_01DBE0_6066.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170728T060943_20170728T061010_006684_00BC1E_FBB4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170722T061030_20170722T061057_017580_01D688_091B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170716T060942_20170716T061009_006509_00B723_71E4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170710T061029_20170710T061056_017405_01D136_E5B9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170704T060941_20170704T061008_006334_00B22A_3175.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170628T061029_20170628T061056_017230_01CBEE_7C17.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170622T060941_20170622T061008_006159_00AD21_678A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170616T061028_20170616T061055_017055_01C69E_5D1B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170610T060940_20170610T061007_005984_00A806_7A39.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170604T061027_20170604T061054_016880_01C139_F366.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170529T060939_20170529T061006_005809_00A2F0_6FB1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170523T061027_20170523T061054_016705_01BBCF_3554.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170517T060949_20170517T061016_005634_009DE3_663B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170511T061031_20170511T061058_016530_01B665_F1D8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170505T060948_20170505T061015_005459_00991B_C000.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170429T061030_20170429T061057_016355_01B11C_F598.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170423T060948_20170423T061015_005284_00941D_442E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170417T061029_20170417T061056_016180_01ABCE_4DFD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170411T060947_20170411T061014_005109_008F0D_547B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170405T061029_20170405T061056_016005_01A670_0834.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170330T060947_20170330T061014_004934_008A05_C4D3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170324T061028_20170324T061055_015830_01A13E_D318.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170318T060946_20170318T061013_004759_008503_49EE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170312T061028_20170312T061055_015655_019C0C_BFDC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170306T060946_20170306T061013_004584_007FD7_F07E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170228T061028_20170228T061055_015480_0196C3_4EFE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170222T060946_20170222T061013_004409_007ABC_0183.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170216T061028_20170216T061055_015305_01916C_9D0D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170210T060946_20170210T061013_004234_007571_9F0D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170204T061028_20170204T061055_015130_018BE4_C974.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170129T060947_20170129T061014_004059_007044_E1ED.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170123T061029_20170123T061056_014955_018698_199B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170117T060947_20170117T061014_003884_006B01_05B9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170111T061029_20170111T061056_014780_01811D_FFBF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170105T060947_20170105T061014_003709_0065F1_8923.zip" ]

        # Local stash of cookies so we don't always have to ask
        self.cookie_jar_path = os.path.join( os.path.expanduser('~'), ".bulk_download_cookiejar.txt")
        self.cookie_jar = None

        self.asf_urs4 = { 'url': 'https://urs.earthdata.nasa.gov/oauth/authorize',
                 'client': 'BO_n7nTIlMljdvU6kRRB3g',
                 'redir': 'https://auth.asf.alaska.edu/login'}

        # Make sure we can write it our current directory
        if os.access(os.getcwd(), os.W_OK) is False:
            print ("WARNING: Cannot write to current path! Check permissions for {0}".format(os.getcwd()))
            exit(-1)

        # For SSL
        self.context = {}

        # Check if user handed in a Metalink or CSV:
        if len(sys.argv) > 0:
            download_files = []
            input_files = []
            for arg in sys.argv[1:]:
                if arg == '--insecure':
                    try:
                        ctx = ssl.create_default_context()
                        ctx.check_hostname = False
                        ctx.verify_mode = ssl.CERT_NONE
                        self.context['context'] = ctx
                    except AttributeError:
                        # Python 2.6 won't complain about SSL Validation
                        pass

                elif arg.endswith('.metalink') or arg.endswith('.csv'):
                    if os.path.isfile( arg ):
                        input_files.append( arg )
                        if arg.endswith('.metalink'):
                            new_files = self.process_metalink(arg)
                        else:
                            new_files = self.process_csv(arg)
                        if new_files is not None:
                            for file_url in (new_files):
                                download_files.append( file_url )
                    else:
                         print (" > I cannot find the input file you specified: {0}".format(arg))
                else:
                    print (" > Command line argument '{0}' makes no sense, ignoring.".format(arg))

            if len(input_files) > 0:
                if len(download_files) > 0:
                    print (" > Processing {0} downloads from {1} input files. ".format(len(download_files), len(input_files)))
                    self.files = download_files
                else:
                    print (" > I see you asked me to download files from {0} input files, but they had no downloads!".format(len(input_files)))
                    print (" > I'm super confused and exiting.")
                    exit(-1)

        # Make sure cookie_jar is good to go!
        self.get_cookie()

         # summary
        self.total_bytes = 0
        self.total_time = 0
        self.cnt = 0
        self.success = []
        self.failed = []
        self.skipped = []


    # Get and validate a cookie
    def get_cookie(self):
       if os.path.isfile(self.cookie_jar_path):
          self.cookie_jar = MozillaCookieJar()
          self.cookie_jar.load(self.cookie_jar_path)

          # make sure cookie is still valid
          if self.check_cookie():
             print(" > Reusing previous cookie jar.")
             return True
          else:
             print(" > Could not validate old cookie Jar")

       # We don't have a valid cookie, prompt user or creds
       print ("No existing URS cookie found, please enter Earthdata username & password:")
       print ("(Credentials will not be stored, saved or logged anywhere)")

       # Keep trying 'till user gets the right U:P
       while self.check_cookie() is False:
          self.get_new_cookie()

       return True

    # Validate cookie before we begin
    def check_cookie(self):

       if self.cookie_jar is None:
          print (" > Cookiejar is bunk: {0}".format(self.cookie_jar))
          return False

       # File we know is valid, used to validate cookie
       file_check = 'https://urs.earthdata.nasa.gov/profile'

       # Apply custom Redirect Hanlder
       opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
       install_opener(opener)

       # Attempt a HEAD request
       request = Request(file_check)
       request.get_method = lambda : 'HEAD'
       try:
          print (" > attempting to download {0}".format(file_check))
          response = urlopen(request, timeout=30)
          resp_code = response.getcode()
          # Make sure we're logged in
          if not self.check_cookie_is_logged_in(self.cookie_jar):
             return False

          # Save cookiejar
          self.cookie_jar.save(self.cookie_jar_path)

       except HTTPError:
          # If we ge this error, again, it likely means the user has not agreed to current EULA
          print ("\nIMPORTANT: ")
          print ("Your user appears to lack permissions to download data from the ASF Datapool.")
          print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
          exit(-1)

       # This return codes indicate the USER has not been approved to download the data
       if resp_code in (300, 301, 302, 303):
          try:
             redir_url = response.info().getheader('Location')
          except AttributeError:
             redir_url = response.getheader('Location')

          #Funky Test env:
          if ("vertex-retired.daac.asf.alaska.edu" in redir_url and "test" in self.asf_urs4['redir']):
             print ("Cough, cough. It's dusty in this test env!")
             return True

          print ("Redirect ({0}) occured, invalid cookie value!".format(resp_code))
          return False

       # These are successes!
       if resp_code in (200, 307):
          return True

       return False

    def get_new_cookie(self):
       # Start by prompting user to input their credentials

       # Another Python2/3 workaround
       try:
          new_username = raw_input("Username: ")
       except NameError:
          new_username = input("Username: ")
       new_password = getpass.getpass(prompt="Password (will not be displayed): ")

       # Build URS4 Cookie request
       auth_cookie_url = self.asf_urs4['url'] + '?client_id=' + self.asf_urs4['client'] + '&redirect_uri=' + self.asf_urs4['redir'] + '&response_type=code&state='

       try:
          #python2
          user_pass = base64.b64encode (bytes(new_username+":"+new_password))
       except TypeError:
          #python3
          user_pass = base64.b64encode (bytes(new_username+":"+new_password, "utf-8"))
          user_pass = user_pass.decode("utf-8")

       # Authenticate against URS, grab all the cookies
       self.cookie_jar = MozillaCookieJar()
       opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
       request = Request(auth_cookie_url, headers={"Authorization": "Basic {0}".format(user_pass)})

       # Watch out cookie rejection!
       try:
          response = opener.open(request)
       except HTTPError as e:
          if "WWW-Authenticate" in e.headers and "Please enter your Earthdata Login credentials" in e.headers["WWW-Authenticate"]:
             print (" > Username and Password combo was not successful. Please try again.")
             return False
          else:
             # If an error happens here, the user most likely has not confirmed EULA.
             print ("\nIMPORTANT: There was an error obtaining a download cookie!")
             print ("Your user appears to lack permission to download data from the ASF Datapool.")
             print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
             exit(-1)
       except URLError as e:
          print ("\nIMPORTANT: There was a problem communicating with URS, unable to obtain cookie. ")
          print ("Try cookie generation later.")
          exit(-1)

       # Did we get a cookie?
       if self.check_cookie_is_logged_in(self.cookie_jar):
          #COOKIE SUCCESS!
          self.cookie_jar.save(self.cookie_jar_path)
          return True

       # if we aren't successful generating the cookie, nothing will work. Stop here!
       print ("WARNING: Could not generate new cookie! Cannot proceed. Please try Username and Password again.")
       print ("Response was {0}.".format(response.getcode()))
       print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
       exit(-1)

    # make sure we're logged into URS
    def check_cookie_is_logged_in(self, cj):
       for cookie in cj:
          if cookie.name == 'urs_user_already_logged':
              # Only get this cookie if we logged in successfully!
              return True

       return False


    # Download the file
    def download_file_with_cookiejar(self, url, file_count, total, recursion=False):
       # see if we've already download this file and if it is that it is the correct size
       download_file = os.path.basename(url).split('?')[0]
       if os.path.isfile(download_file):
          try:
             request = Request(url)
             request.get_method = lambda : 'HEAD'
             response = urlopen(request, timeout=30)
             remote_size = self.get_total_size(response)
             # Check that we were able to derive a size.
             if remote_size:
                 local_size = os.path.getsize(download_file)
                 if remote_size < (local_size+(local_size*.01)) and remote_size > (local_size-(local_size*.01)):
                     print (" > Download file {0} exists! \n > Skipping download of {1}. ".format(download_file, url))
                     return None,None
                 #partial file size wasn't full file size, lets blow away the chunk and start again
                 print (" > Found {0} but it wasn't fully downloaded. Removing file and downloading again.".format(download_file))
                 os.remove(download_file)

          except ssl.CertificateError as e:
             print (" > ERROR: {0}".format(e))
             print (" > Could not validate SSL Cert. You may be able to overcome this using the --insecure flag")
             return False,None

          except HTTPError as e:
             if e.code == 401:
                 print (" > IMPORTANT: Your user may not have permission to download this type of data!")
             else:
                 print (" > Unknown Error, Could not get file HEAD: {0}".format(e))

          except URLError as e:
             print ("URL Error (from HEAD): {0}, {1}".format( e.reason, url))
             if "ssl.c" in "{0}".format(e.reason):
                 print ("IMPORTANT: Remote location may not be accepting your SSL configuration. This is a terminal error.")
             return False,None

       # attempt https connection
       try:
          request = Request(url)
          response = urlopen(request, timeout=30)

          # Watch for redirect
          if response.geturl() != url:

             # See if we were redirect BACK to URS for re-auth.
             if 'https://urs.earthdata.nasa.gov/oauth/authorize' in response.geturl():

                 if recursion:
                     print (" > Entering seemingly endless auth loop. Aborting. ")
                     return False, None

                 # make this easier. If there is no app_type=401, add it
                 new_auth_url = response.geturl()
                 if "app_type" not in new_auth_url:
                     new_auth_url += "&app_type=401"

                 print (" > While attempting to download {0}....".format(url))
                 print (" > Need to obtain new cookie from {0}".format(new_auth_url))
                 old_cookies = [cookie.name for cookie in self.cookie_jar]
                 opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
                 request = Request(new_auth_url)
                 try:
                     response = opener.open(request)
                     for cookie in self.cookie_jar:
                         if cookie.name not in old_cookies:
                              print (" > Saved new cookie: {0}".format(cookie.name))

                              # A little hack to save session cookies
                              if cookie.discard:
                                   cookie.expires = int(time.time()) + 60*60*24*30
                                   print (" > Saving session Cookie that should have been discarded! ")

                     self.cookie_jar.save(self.cookie_jar_path, ignore_discard=True, ignore_expires=True)
                 except HTTPError as e:
                     print ("HTTP Error: {0}, {1}".format( e.code, url))
                     return False,None

                 # Okay, now we have more cookies! Lets try again, recursively!
                 print (" > Attempting download again with new cookies!")
                 return self.download_file_with_cookiejar(url, file_count, total, recursion=True)

             print (" > 'Temporary' Redirect download @ Remote archive:\n > {0}".format(response.geturl()))

          # seems to be working
          print ("({0}/{1}) Downloading {2}".format(file_count, total, url))

          # Open our local file for writing and build status bar
          tf = tempfile.NamedTemporaryFile(mode='w+b', delete=False, dir='.')
          self.chunk_read(response, tf, report_hook=self.chunk_report)

          # Reset download status
          sys.stdout.write('\n')

          tempfile_name = tf.name
          tf.close()

       #handle errors
       except HTTPError as e:
          print ("HTTP Error: {0}, {1}".format( e.code, url))

          if e.code == 401:
             print (" > IMPORTANT: Your user does not have permission to download this type of data!")

          if e.code == 403:
             print (" > Got a 403 Error trying to download this file.  ")
             print (" > You MAY need to log in this app and agree to a EULA. ")

          return False,None

       except URLError as e:
          print ("URL Error (from GET): {0}, {1}, {2}".format(e, e.reason, url))
          if "ssl.c" in "{0}".format(e.reason):
              print ("IMPORTANT: Remote location may not be accepting your SSL configuration. This is a terminal error.")
          return False,None

       except socket.timeout as e:
           print (" > timeout requesting: {0}; {1}".format(url, e))
           return False,None

       except ssl.CertificateError as e:
          print (" > ERROR: {0}".format(e))
          print (" > Could not validate SSL Cert. You may be able to overcome this using the --insecure flag")
          return False,None

       # Return the file size
       shutil.copy(tempfile_name, download_file)
       os.remove(tempfile_name)
       file_size = self.get_total_size(response)
       actual_size = os.path.getsize(download_file)
       if file_size is None:
           # We were unable to calculate file size.
           file_size = actual_size
       return actual_size,file_size

    def get_redirect_url_from_error(self, error):
       find_redirect = re.compile(r"id=\"redir_link\"\s+href=\"(\S+)\"")
       print ("error file was: {}".format(error))
       redirect_url = find_redirect.search(error)
       if redirect_url:
          print("Found: {0}".format(redirect_url.group(0)))
          return (redirect_url.group(0))

       return None


    #  chunk_report taken from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook
    def chunk_report(self, bytes_so_far, file_size):
       if file_size is not None:
           percent = float(bytes_so_far) / file_size
           percent = round(percent*100, 2)
           sys.stdout.write(" > Downloaded %d of %d bytes (%0.2f%%)\r" %
               (bytes_so_far, file_size, percent))
       else:
           # We couldn't figure out the size.
           sys.stdout.write(" > Downloaded %d of unknown Size\r" % (bytes_so_far))

    #  chunk_read modified from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook
    def chunk_read(self, response, local_file, chunk_size=8192, report_hook=None):
       file_size = self.get_total_size(response)
       bytes_so_far = 0

       while 1:
          try:
             chunk = response.read(chunk_size)
          except:
             sys.stdout.write("\n > There was an error reading data. \n")
             break

          try:
             local_file.write(chunk)
          except TypeError:
             local_file.write(chunk.decode(local_file.encoding))
          bytes_so_far += len(chunk)

          if not chunk:
             break

          if report_hook:
             report_hook(bytes_so_far, file_size)

       return bytes_so_far

    def get_total_size(self, response):
       try:
          file_size = response.info().getheader('Content-Length').strip()
       except AttributeError:
          try:
             file_size = response.getheader('Content-Length').strip()
          except AttributeError:
             print ("> Problem getting size")
             return None

       return int(file_size)


    # Get download urls from a metalink file
    def process_metalink(self, ml_file):
       print ("Processing metalink file: {0}".format(ml_file))
       with open(ml_file, 'r') as ml:
          xml = ml.read()

       # Hack to remove annoying namespace
       it = ET.iterparse(StringIO(xml))
       for _, el in it:
          if '}' in el.tag:
             el.tag = el.tag.split('}', 1)[1]  # strip all namespaces
       root = it.root

       dl_urls = []
       ml_files = root.find('files')
       for dl in ml_files:
          dl_urls.append(dl.find('resources').find('url').text)

       if len(dl_urls) > 0:
          return dl_urls
       else:
          return None

    # Get download urls from a csv file
    def process_csv(self, csv_file):
       print ("Processing csv file: {0}".format(csv_file))

       dl_urls = []
       with open(csv_file, 'r') as csvf:
          try:
             csvr = csv.DictReader(csvf)
             for row in csvr:
                dl_urls.append(row['URL'])
          except csv.Error as e:
             print ("WARNING: Could not parse file %s, line %d: %s. Skipping." % (csv_file, csvr.line_num, e))
             return None
          except KeyError as e:
             print ("WARNING: Could not find URL column in file %s. Skipping." % (csv_file))

       if len(dl_urls) > 0:
          return dl_urls
       else:
          return None

    # Download all the files in the list
    def download_files(self):
        for file_name in self.files:

            # make sure we haven't ctrl+c'd or some other abort trap
            if abort == True:
              raise SystemExit

            # download counter
            self.cnt += 1

            # set a timer
            start = time.time()

            # run download
            size,total_size = self.download_file_with_cookiejar(file_name, self.cnt, len(self.files))

            # calculte rate
            end = time.time()

            # stats:
            if size is None:
                self.skipped.append(file_name)
            # Check to see that the download didn't error and is the correct size
            elif size is not False and (total_size < (size+(size*.01)) and total_size > (size-(size*.01))):
                # Download was good!
                elapsed = end - start
                elapsed = 1.0 if elapsed < 1 else elapsed
                rate = (size/1024**2)/elapsed

                print ("Downloaded {0}b in {1:.2f}secs, Average Rate: {2:.2f}MB/sec".format(size, elapsed, rate))

                # add up metrics
                self.total_bytes += size
                self.total_time += elapsed
                self.success.append( {'file':file_name, 'size':size } )

            else:
                print ("There was a problem downloading {0}".format(file_name))
                self.failed.append(file_name)

    def print_summary(self):
        # Print summary:
        print ("\n\nDownload Summary ")
        print ("--------------------------------------------------------------------------------")
        print ("  Successes: {0} files, {1} bytes ".format(len(self.success), self.total_bytes))
        for success_file in self.success:
           print ("           - {0}  {1:.2f}MB".format(success_file['file'],(success_file['size']/1024.0**2)))
        if len(self.failed) > 0:
           print ("  Failures: {0} files".format(len(self.failed)))
           for failed_file in self.failed:
              print ("          - {0}".format(failed_file))
        if len(self.skipped) > 0:
           print ("  Skipped: {0} files".format(len(self.skipped)))
           for skipped_file in self.skipped:
              print ("          - {0}".format(skipped_file))
        if len(self.success) > 0:
           print ("  Average Rate: {0:.2f}MB/sec".format( (self.total_bytes/1024.0**2)/self.total_time))
        print ("--------------------------------------------------------------------------------")


if __name__ == "__main__":
    # Setup a signal trap for SIGINT (Ctrl+C)
    signal.signal(signal.SIGINT, signal_handler)

    downloader = bulk_downloader()
    downloader.download_files()
    downloader.print_summary()
