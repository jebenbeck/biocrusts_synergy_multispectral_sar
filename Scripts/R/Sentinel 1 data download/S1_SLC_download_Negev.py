#!/usr/bin/python

# Usage:
#
#    In a terminal/command line, cd to the directory where this file lives. Then...
#
#    With embedded urls: ( download the hardcoded list of files in the 'files =' block below)
#
#       python ./download-all-2022-02-10_18-45-31.py
#
#    Download all files in a Metalink/CSV: (downloaded from ASF Vertex)
#
#       python ./download-all-2022-02-10_18-45-31.py /path/to/downloads.metalink localmetalink.metalink localcsv.csv
#
#    Compatibility: python >= 2.6.5, 2.7.5, 3.0
#
#    If downloading from a trusted source with invalid SSL Certs, use --insecure to ignore
#
#    For more information on bulk downloads, navigate to:
#        https://asf.alaska.edu/how-to/data-tools/data-tools/#bulk_download
#
#
#
#    This script was generated by the Alaska Satellite Facility's bulk download service.
#    For more information on the service, navigate to:
#        http://bulk-download.asf.alaska.edu/help
#

import sys, csv
import os, os.path
import tempfile, shutil
import re

import base64
import time
import getpass
import ssl
import signal
import socket

import xml.etree.ElementTree as ET

#############
# This next block is a bunch of Python 2/3 compatability

try:
   # Python 2.x Libs
   from urllib2 import build_opener, install_opener, Request, urlopen, HTTPError
   from urllib2 import URLError, HTTPSHandler,  HTTPHandler, HTTPCookieProcessor

   from cookielib import MozillaCookieJar
   from StringIO import StringIO

except ImportError as e:

   # Python 3.x Libs
   from urllib.request import build_opener, install_opener, Request, urlopen
   from urllib.request import HTTPHandler, HTTPSHandler, HTTPCookieProcessor
   from urllib.error import HTTPError, URLError

   from http.cookiejar import MozillaCookieJar
   from io import StringIO

###
# Global variables intended for cross-thread modification
abort = False

###
# A routine that handles trapped signals
def signal_handler(sig, frame):
    global abort
    sys.stderr.output("\n > Caught Signal. Exiting!\n")
    abort = True # necessary to cause the program to stop
    raise SystemExit  # this will only abort the thread that the ctrl+c was caught in

class bulk_downloader:
    def __init__(self):
        # List of files to download
        self.files = [ "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211222T034430_20211222T034458_041116_04E297_F432.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211216T034352_20211216T034419_030045_039658_4A56.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211210T034431_20211210T034458_040941_04DCBB_1DD0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211204T034352_20211204T034419_029870_0390CF_2290.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211128T034432_20211128T034459_040766_04D6AB_4040.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211122T034353_20211122T034420_029695_038B50_9F22.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211116T034432_20211116T034459_040591_04D0A8_E998.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211110T034353_20211110T034420_029520_0385E9_F6F1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211104T034432_20211104T034459_040416_04CA8C_47A3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211029T034353_20211029T034420_029345_03808B_C1C0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211023T034432_20211023T034500_040241_04C474_58A6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211017T034353_20211017T034420_029170_037B28_464C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20211011T034432_20211011T034459_040066_04BE5A_9FBC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20211005T034353_20211005T034420_028995_0375BF_DEF8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210929T034432_20210929T034459_039891_04B854_0770.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210923T034353_20210923T034420_028820_03707C_01FF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210917T034432_20210917T034459_039716_04B251_F193.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210911T034353_20210911T034420_028645_036B25_26B2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210905T034431_20210905T034458_039541_04AC57_7E6F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210830T034352_20210830T034419_028470_0365B8_133A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210824T034431_20210824T034458_039366_04A651_0DF7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210818T034351_20210818T034418_028295_03603E_8119.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210812T034430_20210812T034457_039191_04A047_B608.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210806T034351_20210806T034418_028120_035AC5_EB9C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210731T034429_20210731T034457_039016_049A87_F33F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210725T034350_20210725T034417_027945_035592_2A25.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210719T034429_20210719T034456_038841_049555_F7AB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210713T034349_20210713T034416_027770_035062_E0FA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210707T034428_20210707T034455_038666_049016_E55F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210701T034349_20210701T034416_027595_034B3C_51AE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210625T034427_20210625T034454_038491_048AD0_2192.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210619T034348_20210619T034415_027420_03465A_F408.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210613T034427_20210613T034454_038316_048594_B999.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210607T034347_20210607T034414_027245_03411D_73D5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210601T034426_20210601T034453_038141_048069_C9D0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210526T034346_20210526T034413_027070_033BE7_154A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210520T034425_20210520T034452_037966_047B28_2172.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210514T034346_20210514T034413_026895_03368C_CEF7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210508T034425_20210508T034452_037791_0475DA_3714.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210502T034345_20210502T034412_026720_033111_233A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210426T034424_20210426T034451_037616_046FED_02B9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210420T034345_20210420T034412_026545_032B78_E69E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210414T034423_20210414T034451_037441_0469E5_A119.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210408T034344_20210408T034411_026370_0325D7_E4B6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210402T034423_20210402T034450_037266_0463D7_3AFC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210327T034344_20210327T034411_026195_03204C_1857.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210321T034423_20210321T034450_037091_045DD0_3656.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210315T034344_20210315T034411_026020_031ABD_1B21.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210309T034423_20210309T034450_036916_0457B0_0317.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210303T034343_20210303T034411_025845_031510_6BCF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210225T034423_20210225T034450_036741_045193_A706.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210219T034344_20210219T034411_025670_030F55_3EC8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210213T034423_20210213T034450_036566_044B7E_B14F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210207T034344_20210207T034411_025495_03099F_144E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210201T034423_20210201T034450_036391_04456A_6489.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210126T034344_20210126T034411_025320_0303F6_8347.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210114T034345_20210114T034412_025145_02FE64_4E93.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20210108T034424_20210108T034451_036041_043935_390F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20210102T034345_20210102T034412_024970_02F8C6_7D57.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201221T034353_20201221T034420_024795_02F323_7BB6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201215T034425_20201215T034452_035691_042D0D_6C52.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201209T034346_20201209T034413_024620_02ED75_E103.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201203T034426_20201203T034453_035516_0426FF_77CF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201127T034347_20201127T034414_024445_02E7D5_E824.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201121T034426_20201121T034453_035341_042100_DC06.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201115T034347_20201115T034414_024270_02E257_D3F6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201109T034426_20201109T034454_035166_041AE6_AEDC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201103T034347_20201103T034415_024095_02DCD6_A9EB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201028T034427_20201028T034454_034991_0414DE_DCF7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201022T034347_20201022T034414_023920_02D76C_39AD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201016T034427_20201016T034454_034816_040ED4_6435.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20201010T034347_20201010T034415_023745_02D1EE_4847.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20201004T034427_20201004T034454_034641_0408C1_AA8C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200928T034347_20200928T034414_023570_02CC82_18F1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200922T034426_20200922T034453_034466_04029E_E191.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200916T034347_20200916T034414_023395_02C707_54D1.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200910T034426_20200910T034453_034291_03FC58_147A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200904T034346_20200904T034414_023220_02C186_4ED8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200829T034425_20200829T034453_034116_03F63A_1DA3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200823T034346_20200823T034413_023045_02BC16_0DDA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200817T034425_20200817T034452_033941_03F00D_B96E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200811T034345_20200811T034412_022870_02B698_6F5B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200805T034424_20200805T034451_033766_03E9F9_EDC4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200730T034345_20200730T034412_022695_02B131_0D3E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200724T034423_20200724T034450_033591_03E49D_7E19.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200718T034344_20200718T034411_022520_02ABDD_845B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200712T034422_20200712T034450_033416_03DF3C_EBFE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200706T034343_20200706T034410_022345_02A691_41D2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200630T034422_20200630T034449_033241_03D9EC_FF0F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200624T034342_20200624T034409_022170_02A13A_D628.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200618T034421_20200618T034448_033066_03D49A_9CAD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200612T034342_20200612T034409_021995_029BE6_B07F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200606T034420_20200606T034447_032891_03CF51_FC38.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200531T034341_20200531T034408_021820_0296AC_4C1E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200525T034420_20200525T034447_032716_03CA27_F1F6.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200519T034340_20200519T034407_021645_029174_3B2E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200513T034419_20200513T034446_032541_03C4D8_AD58.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200507T034339_20200507T034407_021470_028C40_A381.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200501T034418_20200501T034445_032366_03BF25_A524.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200425T034339_20200425T034406_021295_0286B9_DE80.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200419T034418_20200419T034445_032191_03B8FE_9DAF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200413T034338_20200413T034406_021120_028134_151C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200407T034417_20200407T034444_032016_03B2D6_C85F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200401T034338_20200401T034405_020945_027BA8_A5A2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200326T034417_20200326T034444_031841_03ACAB_CD1F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200320T034338_20200320T034405_020770_027621_7244.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200314T034417_20200314T034444_031666_03A682_C878.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200308T034338_20200308T034405_020595_027097_98AD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200302T034417_20200302T034444_031491_03A06C_3D43.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200225T034338_20200225T034405_020420_026B03_7218.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200219T034417_20200219T034444_031316_039A6A_C322.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200213T034338_20200213T034405_020245_026563_07F9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200207T034417_20200207T034444_031141_03945D_ABF8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200201T034338_20200201T034405_020070_025FBD_F0E4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200126T034417_20200126T034445_030966_038E44_8689.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200120T034339_20200120T034406_019895_025A18_EEEC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200114T034418_20200114T034445_030791_038819_D652.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20200108T034339_20200108T034406_019720_025486_C9C9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20200102T034418_20200102T034445_030616_0381F8_795C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191227T034340_20191227T034407_019545_024EF5_93A3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191221T034419_20191221T034446_030441_037BF3_C437.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191215T034340_20191215T034407_019370_024965_2C05.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191209T034419_20191209T034446_030266_0375E5_CB4B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191203T034340_20191203T034408_019195_0243D6_1A9F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191127T034420_20191127T034447_030091_036FE7_C1A2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191121T034341_20191121T034408_019020_023E45_BF9A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191115T034420_20191115T034447_029916_0369D3_C704.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191109T034341_20191109T034408_018845_0238A3_F5E7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191103T034420_20191103T034447_029741_0363B0_74AD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191028T034341_20191028T034408_018670_0232F7_E2D0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191022T034420_20191022T034447_029566_035D93_F27E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191016T034341_20191016T034408_018495_022D96_B0E0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20191010T034420_20191010T034447_029391_035788_52D4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20191004T034341_20191004T034408_018320_02282B_8343.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190928T034420_20190928T034447_029216_035188_6E82.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190916T034419_20190916T034447_029041_034B8F_5862.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190910T034340_20190910T034407_017970_021D4F_C9B0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190904T034419_20190904T034446_028866_034579_6A16.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190823T034419_20190823T034446_028691_033F57_DAE2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190817T034339_20190817T034406_017620_021260_6B06.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190811T034418_20190811T034445_028516_03394F_903D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190805T034338_20190805T034405_017445_020CF7_BDEE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190730T034417_20190730T034444_028341_0333D2_813B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190724T034338_20190724T034405_017270_0207B2_1741.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190718T034416_20190718T034443_028166_032E76_8EDB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190712T034337_20190712T034404_017095_02029D_0B1D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190630T034336_20190630T034403_016920_01FD77_89AA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190624T034415_20190624T034442_027816_0323DB_0027.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190618T034336_20190618T034403_016745_01F848_BDFF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190612T034414_20190612T034441_027641_031EA9_5EFE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190606T034335_20190606T034402_016570_01F315_AFE4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190531T034413_20190531T034440_027466_031954_2B2C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190525T034334_20190525T034401_016395_01EDD2_DF05.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190519T034413_20190519T034440_027291_0313E1_B0B8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190513T034333_20190513T034401_016220_01E86A_2274.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190507T034412_20190507T034439_027116_030E69_31C4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190501T034333_20190501T034400_016045_01E2CB_5059.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190425T034412_20190425T034439_026941_030806_2724.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190419T034323_20190419T034350_015870_01DCF1_9868.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190413T034411_20190413T034438_026766_0301B4_E7E5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190407T034323_20190407T034350_015695_01D728_A7CD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190401T034411_20190401T034438_026591_02FB4C_4E45.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190326T034323_20190326T034350_015520_01D15F_ADDC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190320T034411_20190320T034438_026416_02F4D4_61AC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190314T034322_20190314T034349_015345_01CBA8_7FE7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190308T034411_20190308T034438_026241_02EE61_17B2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190302T034322_20190302T034349_015170_01C5ED_B8CE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190224T034411_20190224T034438_026066_02E816_566D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190218T034323_20190218T034349_014995_01C035_5FEA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190212T034411_20190212T034438_025891_02E1DC_1B09.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190206T034323_20190206T034350_014820_01BA76_4DC8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190131T034411_20190131T034438_025716_02DBA1_F82E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190125T034323_20190125T034350_014645_01B4B6_0319.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190119T034411_20190119T034439_025541_02D53C_6887.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190113T034324_20190113T034350_014470_01AF20_9518.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20190107T034412_20190107T034439_025366_02CEEB_4342.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20190101T034324_20190101T034351_014295_01A97E_31A8.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181226T034412_20181226T034439_025191_02C897_1A4A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181220T034324_20181220T034351_014120_01A3AE_0DD5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181214T034412_20181214T034440_025016_02C244_9558.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181208T034325_20181208T034352_013945_019DF2_576C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181202T034413_20181202T034440_024841_02BC30_524D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181120T034414_20181120T034441_024666_02B5FE_AF2B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181114T034326_20181114T034352_013595_0192B1_FCF3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181102T034326_20181102T034353_013420_018D43_280F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181027T034414_20181027T034441_024316_02A973_CDDA.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181021T034326_20181021T034353_013245_0187C4_C5C5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181015T034414_20181015T034441_024141_02A3D6_84AC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20181009T034326_20181009T034353_013070_01825C_AE5B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20181003T034414_20181003T034441_023966_029E1A_1575.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180927T034325_20180927T034352_012895_017D05_5B19.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180921T034414_20180921T034441_023791_029865_7E19.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180915T034325_20180915T034352_012720_0177A1_AD4C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180909T034413_20180909T034440_023616_0292C2_F728.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180903T034325_20180903T034352_012545_01724B_6F09.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180822T034324_20180822T034351_012370_016CE0_B235.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180816T034412_20180816T034439_023266_02878A_4354.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180810T034323_20180810T034350_012195_016770_F6BC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180804T034411_20180804T034438_023091_0281E8_88F9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180729T034323_20180729T034350_012020_016214_2A10.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180723T034411_20180723T034438_022916_027C6D_3EB7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180717T034322_20180717T034349_011845_015CD1_419A.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180711T034410_20180711T034437_022741_0276F6_B1EC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180705T034321_20180705T034348_011670_01576C_0638.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180629T034409_20180629T034436_022566_0271C8_FD41.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180623T034320_20180623T034347_011495_0151F8_5FC4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180617T034408_20180617T034436_022391_026CAE_D39D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180611T034320_20180611T034347_011320_014C90_E923.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180605T034408_20180605T034435_022216_02674D_2B2E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180530T034319_20180530T034346_011145_014717_DCE7.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180524T034407_20180524T034434_022041_0261C3_BFDF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180518T034318_20180518T034345_010970_014159_1CA4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180512T034406_20180512T034433_021866_025C35_2FB9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180506T034318_20180506T034345_010795_013BB6_E5B2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180430T034406_20180430T034433_021691_02569E_FB6F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180424T034317_20180424T034344_010620_013613_8FB3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180418T034405_20180418T034432_021516_025126_45D4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180412T034317_20180412T034344_010445_01307F_DCDE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180406T034405_20180406T034432_021341_024BA7_C0AF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180331T034316_20180331T034343_010270_012ACF_D9F4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180325T034404_20180325T034431_021166_02462C_9E93.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180319T034316_20180319T034343_010095_012525_96FF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180313T034404_20180313T034431_020991_02409D_C281.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180307T034316_20180307T034343_009920_011F6D_12C9.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180301T034404_20180301T034431_020816_023B14_8219.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180223T034316_20180223T034343_009745_011993_4DB5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180217T034404_20180217T034431_020641_023585_0A94.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180211T034316_20180211T034343_009570_0113D1_1E6E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180205T034404_20180205T034431_020466_022FF1_3E9D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180130T034316_20180130T034343_009395_010E08_3D03.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180124T034405_20180124T034432_020291_022A5B_F182.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180118T034316_20180118T034343_009220_010850_1836.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20180112T034405_20180112T034432_020116_0224CC_4584.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20180106T034317_20180106T034344_009045_01029F_6765.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171231T034405_20171231T034432_019941_021F45_7C81.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171219T034406_20171219T034433_019766_0219D7_E768.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171213T034318_20171213T034345_008695_00F755_E40E.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171207T034406_20171207T034433_019591_021462_33AC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171201T034318_20171201T034345_008520_00F1C9_03B4.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171125T034407_20171125T034434_019416_020EEC_E4FC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171113T034407_20171113T034434_019241_020963_17D5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171107T034319_20171107T034346_008170_00E70B_25EF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171101T034407_20171101T034434_019066_0203FB_F243.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171026T034319_20171026T034346_007995_00E1FE_6480.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171014T034319_20171014T034346_007820_00DCF5_76FF.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20171008T034407_20171008T034434_018716_01F943_192D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20171002T034319_20171002T034346_007645_00D800_6D07.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170920T034318_20170920T034345_007470_00D2FF_1755.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170914T034407_20170914T034434_018366_01EE98_528C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170908T034318_20170908T034345_007295_00CDDF_69FB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170902T034406_20170902T034433_018191_01E921_6926.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170827T034318_20170827T034345_007120_00C8C7_D557.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170815T034317_20170815T034344_006945_00C3B6_0ECD.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170809T034405_20170809T034432_017841_01DE92_B8AB.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170803T034316_20170803T034343_006770_00BE99_AAC5.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170728T034404_20170728T034432_017666_01D937_8174.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170722T034316_20170722T034343_006595_00B995_9A79.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170716T034404_20170716T034431_017491_01D3DD_3858.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170710T034315_20170710T034342_006420_00B494_0353.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170704T034403_20170704T034430_017316_01CE94_D545.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170628T034314_20170628T034341_006245_00AFA5_EB31.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170622T034402_20170622T034429_017141_01C945_7312.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170616T034314_20170616T034341_006070_00AA92_3DE3.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170610T034402_20170610T034429_016966_01C3E8_4C48.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170604T034313_20170604T034340_005895_00A56B_244F.zip",
                       "https://datapool.asf.alaska.edu/SLC/SA/S1A_IW_SLC__1SDV_20170529T034401_20170529T034428_016791_01BE7C_E8FE.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170523T034312_20170523T034339_005720_00A058_80E0.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170511T034311_20170511T034338_005545_009B67_5229.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170429T034311_20170429T034338_005370_009696_15BC.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170417T034310_20170417T034337_005195_009177_A863.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170405T034310_20170405T034337_005020_008C78_795B.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170324T034309_20170324T034336_004845_008769_5D90.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170312T034309_20170312T034336_004670_008253_2F6C.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170228T034309_20170228T034336_004495_007D2F_5D2D.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170216T034309_20170216T034336_004320_007806_9761.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170204T034309_20170204T034336_004145_0072C0_1DC2.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170123T034310_20170123T034337_003970_006D9A_2C67.zip",
                       "https://datapool.asf.alaska.edu/SLC/SB/S1B_IW_SLC__1SDV_20170111T034310_20170111T034337_003795_006861_9215.zip" ]

        # Local stash of cookies so we don't always have to ask
        self.cookie_jar_path = os.path.join( os.path.expanduser('~'), ".bulk_download_cookiejar.txt")
        self.cookie_jar = None

        self.asf_urs4 = { 'url': 'https://urs.earthdata.nasa.gov/oauth/authorize',
                 'client': 'BO_n7nTIlMljdvU6kRRB3g',
                 'redir': 'https://auth.asf.alaska.edu/login'}

        # Make sure we can write it our current directory
        if os.access(os.getcwd(), os.W_OK) is False:
            print ("WARNING: Cannot write to current path! Check permissions for {0}".format(os.getcwd()))
            exit(-1)

        # For SSL
        self.context = {}

        # Check if user handed in a Metalink or CSV:
        if len(sys.argv) > 0:
            download_files = []
            input_files = []
            for arg in sys.argv[1:]:
                if arg == '--insecure':
                    try:
                        ctx = ssl.create_default_context()
                        ctx.check_hostname = False
                        ctx.verify_mode = ssl.CERT_NONE
                        self.context['context'] = ctx
                    except AttributeError:
                        # Python 2.6 won't complain about SSL Validation
                        pass

                elif arg.endswith('.metalink') or arg.endswith('.csv'):
                    if os.path.isfile( arg ):
                        input_files.append( arg )
                        if arg.endswith('.metalink'):
                            new_files = self.process_metalink(arg)
                        else:
                            new_files = self.process_csv(arg)
                        if new_files is not None:
                            for file_url in (new_files):
                                download_files.append( file_url )
                    else:
                         print (" > I cannot find the input file you specified: {0}".format(arg))
                else:
                    print (" > Command line argument '{0}' makes no sense, ignoring.".format(arg))

            if len(input_files) > 0:
                if len(download_files) > 0:
                    print (" > Processing {0} downloads from {1} input files. ".format(len(download_files), len(input_files)))
                    self.files = download_files
                else:
                    print (" > I see you asked me to download files from {0} input files, but they had no downloads!".format(len(input_files)))
                    print (" > I'm super confused and exiting.")
                    exit(-1)

        # Make sure cookie_jar is good to go!
        self.get_cookie()

         # summary
        self.total_bytes = 0
        self.total_time = 0
        self.cnt = 0
        self.success = []
        self.failed = []
        self.skipped = []


    # Get and validate a cookie
    def get_cookie(self):
       if os.path.isfile(self.cookie_jar_path):
          self.cookie_jar = MozillaCookieJar()
          self.cookie_jar.load(self.cookie_jar_path)

          # make sure cookie is still valid
          if self.check_cookie():
             print(" > Reusing previous cookie jar.")
             return True
          else:
             print(" > Could not validate old cookie Jar")

       # We don't have a valid cookie, prompt user or creds
       print ("No existing URS cookie found, please enter Earthdata username & password:")
       print ("(Credentials will not be stored, saved or logged anywhere)")

       # Keep trying 'till user gets the right U:P
       while self.check_cookie() is False:
          self.get_new_cookie()

       return True

    # Validate cookie before we begin
    def check_cookie(self):

       if self.cookie_jar is None:
          print (" > Cookiejar is bunk: {0}".format(self.cookie_jar))
          return False

       # File we know is valid, used to validate cookie
       file_check = 'https://urs.earthdata.nasa.gov/profile'

       # Apply custom Redirect Hanlder
       opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
       install_opener(opener)

       # Attempt a HEAD request
       request = Request(file_check)
       request.get_method = lambda : 'HEAD'
       try:
          print (" > attempting to download {0}".format(file_check))
          response = urlopen(request, timeout=30)
          resp_code = response.getcode()
          # Make sure we're logged in
          if not self.check_cookie_is_logged_in(self.cookie_jar):
             return False

          # Save cookiejar
          self.cookie_jar.save(self.cookie_jar_path)

       except HTTPError:
          # If we ge this error, again, it likely means the user has not agreed to current EULA
          print ("\nIMPORTANT: ")
          print ("Your user appears to lack permissions to download data from the ASF Datapool.")
          print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
          exit(-1)

       # This return codes indicate the USER has not been approved to download the data
       if resp_code in (300, 301, 302, 303):
          try:
             redir_url = response.info().getheader('Location')
          except AttributeError:
             redir_url = response.getheader('Location')

          #Funky Test env:
          if ("vertex-retired.daac.asf.alaska.edu" in redir_url and "test" in self.asf_urs4['redir']):
             print ("Cough, cough. It's dusty in this test env!")
             return True

          print ("Redirect ({0}) occured, invalid cookie value!".format(resp_code))
          return False

       # These are successes!
       if resp_code in (200, 307):
          return True

       return False

    def get_new_cookie(self):
       # Start by prompting user to input their credentials

       # Another Python2/3 workaround
       try:
          new_username = raw_input("Username: ")
       except NameError:
          new_username = input("Username: ")
       new_password = getpass.getpass(prompt="Password (will not be displayed): ")

       # Build URS4 Cookie request
       auth_cookie_url = self.asf_urs4['url'] + '?client_id=' + self.asf_urs4['client'] + '&redirect_uri=' + self.asf_urs4['redir'] + '&response_type=code&state='

       try:
          #python2
          user_pass = base64.b64encode (bytes(new_username+":"+new_password))
       except TypeError:
          #python3
          user_pass = base64.b64encode (bytes(new_username+":"+new_password, "utf-8"))
          user_pass = user_pass.decode("utf-8")

       # Authenticate against URS, grab all the cookies
       self.cookie_jar = MozillaCookieJar()
       opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
       request = Request(auth_cookie_url, headers={"Authorization": "Basic {0}".format(user_pass)})

       # Watch out cookie rejection!
       try:
          response = opener.open(request)
       except HTTPError as e:
          if "WWW-Authenticate" in e.headers and "Please enter your Earthdata Login credentials" in e.headers["WWW-Authenticate"]:
             print (" > Username and Password combo was not successful. Please try again.")
             return False
          else:
             # If an error happens here, the user most likely has not confirmed EULA.
             print ("\nIMPORTANT: There was an error obtaining a download cookie!")
             print ("Your user appears to lack permission to download data from the ASF Datapool.")
             print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
             exit(-1)
       except URLError as e:
          print ("\nIMPORTANT: There was a problem communicating with URS, unable to obtain cookie. ")
          print ("Try cookie generation later.")
          exit(-1)

       # Did we get a cookie?
       if self.check_cookie_is_logged_in(self.cookie_jar):
          #COOKIE SUCCESS!
          self.cookie_jar.save(self.cookie_jar_path)
          return True

       # if we aren't successful generating the cookie, nothing will work. Stop here!
       print ("WARNING: Could not generate new cookie! Cannot proceed. Please try Username and Password again.")
       print ("Response was {0}.".format(response.getcode()))
       print ("\n\nNew users: you must first log into Vertex and accept the EULA. In addition, your Study Area must be set at Earthdata https://urs.earthdata.nasa.gov")
       exit(-1)

    # make sure we're logged into URS
    def check_cookie_is_logged_in(self, cj):
       for cookie in cj:
          if cookie.name == 'urs_user_already_logged':
              # Only get this cookie if we logged in successfully!
              return True

       return False


    # Download the file
    def download_file_with_cookiejar(self, url, file_count, total, recursion=False):
       # see if we've already download this file and if it is that it is the correct size
       download_file = os.path.basename(url).split('?')[0]
       if os.path.isfile(download_file):
          try:
             request = Request(url)
             request.get_method = lambda : 'HEAD'
             response = urlopen(request, timeout=30)
             remote_size = self.get_total_size(response)
             # Check that we were able to derive a size.
             if remote_size:
                 local_size = os.path.getsize(download_file)
                 if remote_size < (local_size+(local_size*.01)) and remote_size > (local_size-(local_size*.01)):
                     print (" > Download file {0} exists! \n > Skipping download of {1}. ".format(download_file, url))
                     return None,None
                 #partial file size wasn't full file size, lets blow away the chunk and start again
                 print (" > Found {0} but it wasn't fully downloaded. Removing file and downloading again.".format(download_file))
                 os.remove(download_file)

          except ssl.CertificateError as e:
             print (" > ERROR: {0}".format(e))
             print (" > Could not validate SSL Cert. You may be able to overcome this using the --insecure flag")
             return False,None

          except HTTPError as e:
             if e.code == 401:
                 print (" > IMPORTANT: Your user may not have permission to download this type of data!")
             else:
                 print (" > Unknown Error, Could not get file HEAD: {0}".format(e))

          except URLError as e:
             print ("URL Error (from HEAD): {0}, {1}".format( e.reason, url))
             if "ssl.c" in "{0}".format(e.reason):
                 print ("IMPORTANT: Remote location may not be accepting your SSL configuration. This is a terminal error.")
             return False,None

       # attempt https connection
       try:
          request = Request(url)
          response = urlopen(request, timeout=30)

          # Watch for redirect
          if response.geturl() != url:

             # See if we were redirect BACK to URS for re-auth.
             if 'https://urs.earthdata.nasa.gov/oauth/authorize' in response.geturl():

                 if recursion:
                     print (" > Entering seemingly endless auth loop. Aborting. ")
                     return False, None

                 # make this easier. If there is no app_type=401, add it
                 new_auth_url = response.geturl()
                 if "app_type" not in new_auth_url:
                     new_auth_url += "&app_type=401"

                 print (" > While attempting to download {0}....".format(url))
                 print (" > Need to obtain new cookie from {0}".format(new_auth_url))
                 old_cookies = [cookie.name for cookie in self.cookie_jar]
                 opener = build_opener(HTTPCookieProcessor(self.cookie_jar), HTTPHandler(), HTTPSHandler(**self.context))
                 request = Request(new_auth_url)
                 try:
                     response = opener.open(request)
                     for cookie in self.cookie_jar:
                         if cookie.name not in old_cookies:
                              print (" > Saved new cookie: {0}".format(cookie.name))

                              # A little hack to save session cookies
                              if cookie.discard:
                                   cookie.expires = int(time.time()) + 60*60*24*30
                                   print (" > Saving session Cookie that should have been discarded! ")

                     self.cookie_jar.save(self.cookie_jar_path, ignore_discard=True, ignore_expires=True)
                 except HTTPError as e:
                     print ("HTTP Error: {0}, {1}".format( e.code, url))
                     return False,None

                 # Okay, now we have more cookies! Lets try again, recursively!
                 print (" > Attempting download again with new cookies!")
                 return self.download_file_with_cookiejar(url, file_count, total, recursion=True)

             print (" > 'Temporary' Redirect download @ Remote archive:\n > {0}".format(response.geturl()))

          # seems to be working
          print ("({0}/{1}) Downloading {2}".format(file_count, total, url))

          # Open our local file for writing and build status bar
          tf = tempfile.NamedTemporaryFile(mode='w+b', delete=False, dir='.')
          self.chunk_read(response, tf, report_hook=self.chunk_report)

          # Reset download status
          sys.stdout.write('\n')

          tempfile_name = tf.name
          tf.close()

       #handle errors
       except HTTPError as e:
          print ("HTTP Error: {0}, {1}".format( e.code, url))

          if e.code == 401:
             print (" > IMPORTANT: Your user does not have permission to download this type of data!")

          if e.code == 403:
             print (" > Got a 403 Error trying to download this file.  ")
             print (" > You MAY need to log in this app and agree to a EULA. ")

          return False,None

       except URLError as e:
          print ("URL Error (from GET): {0}, {1}, {2}".format(e, e.reason, url))
          if "ssl.c" in "{0}".format(e.reason):
              print ("IMPORTANT: Remote location may not be accepting your SSL configuration. This is a terminal error.")
          return False,None

       except socket.timeout as e:
           print (" > timeout requesting: {0}; {1}".format(url, e))
           return False,None

       except ssl.CertificateError as e:
          print (" > ERROR: {0}".format(e))
          print (" > Could not validate SSL Cert. You may be able to overcome this using the --insecure flag")
          return False,None

       # Return the file size
       shutil.copy(tempfile_name, download_file)
       os.remove(tempfile_name)
       file_size = self.get_total_size(response)
       actual_size = os.path.getsize(download_file)
       if file_size is None:
           # We were unable to calculate file size.
           file_size = actual_size
       return actual_size,file_size

    def get_redirect_url_from_error(self, error):
       find_redirect = re.compile(r"id=\"redir_link\"\s+href=\"(\S+)\"")
       print ("error file was: {}".format(error))
       redirect_url = find_redirect.search(error)
       if redirect_url:
          print("Found: {0}".format(redirect_url.group(0)))
          return (redirect_url.group(0))

       return None


    #  chunk_report taken from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook
    def chunk_report(self, bytes_so_far, file_size):
       if file_size is not None:
           percent = float(bytes_so_far) / file_size
           percent = round(percent*100, 2)
           sys.stdout.write(" > Downloaded %d of %d bytes (%0.2f%%)\r" %
               (bytes_so_far, file_size, percent))
       else:
           # We couldn't figure out the size.
           sys.stdout.write(" > Downloaded %d of unknown Size\r" % (bytes_so_far))

    #  chunk_read modified from http://stackoverflow.com/questions/2028517/python-urllib2-progress-hook
    def chunk_read(self, response, local_file, chunk_size=8192, report_hook=None):
       file_size = self.get_total_size(response)
       bytes_so_far = 0

       while 1:
          try:
             chunk = response.read(chunk_size)
          except:
             sys.stdout.write("\n > There was an error reading data. \n")
             break

          try:
             local_file.write(chunk)
          except TypeError:
             local_file.write(chunk.decode(local_file.encoding))
          bytes_so_far += len(chunk)

          if not chunk:
             break

          if report_hook:
             report_hook(bytes_so_far, file_size)

       return bytes_so_far

    def get_total_size(self, response):
       try:
          file_size = response.info().getheader('Content-Length').strip()
       except AttributeError:
          try:
             file_size = response.getheader('Content-Length').strip()
          except AttributeError:
             print ("> Problem getting size")
             return None

       return int(file_size)


    # Get download urls from a metalink file
    def process_metalink(self, ml_file):
       print ("Processing metalink file: {0}".format(ml_file))
       with open(ml_file, 'r') as ml:
          xml = ml.read()

       # Hack to remove annoying namespace
       it = ET.iterparse(StringIO(xml))
       for _, el in it:
          if '}' in el.tag:
             el.tag = el.tag.split('}', 1)[1]  # strip all namespaces
       root = it.root

       dl_urls = []
       ml_files = root.find('files')
       for dl in ml_files:
          dl_urls.append(dl.find('resources').find('url').text)

       if len(dl_urls) > 0:
          return dl_urls
       else:
          return None

    # Get download urls from a csv file
    def process_csv(self, csv_file):
       print ("Processing csv file: {0}".format(csv_file))

       dl_urls = []
       with open(csv_file, 'r') as csvf:
          try:
             csvr = csv.DictReader(csvf)
             for row in csvr:
                dl_urls.append(row['URL'])
          except csv.Error as e:
             print ("WARNING: Could not parse file %s, line %d: %s. Skipping." % (csv_file, csvr.line_num, e))
             return None
          except KeyError as e:
             print ("WARNING: Could not find URL column in file %s. Skipping." % (csv_file))

       if len(dl_urls) > 0:
          return dl_urls
       else:
          return None

    # Download all the files in the list
    def download_files(self):
        for file_name in self.files:

            # make sure we haven't ctrl+c'd or some other abort trap
            if abort == True:
              raise SystemExit

            # download counter
            self.cnt += 1

            # set a timer
            start = time.time()

            # run download
            size,total_size = self.download_file_with_cookiejar(file_name, self.cnt, len(self.files))

            # calculte rate
            end = time.time()

            # stats:
            if size is None:
                self.skipped.append(file_name)
            # Check to see that the download didn't error and is the correct size
            elif size is not False and (total_size < (size+(size*.01)) and total_size > (size-(size*.01))):
                # Download was good!
                elapsed = end - start
                elapsed = 1.0 if elapsed < 1 else elapsed
                rate = (size/1024**2)/elapsed

                print ("Downloaded {0}b in {1:.2f}secs, Average Rate: {2:.2f}MB/sec".format(size, elapsed, rate))

                # add up metrics
                self.total_bytes += size
                self.total_time += elapsed
                self.success.append( {'file':file_name, 'size':size } )

            else:
                print ("There was a problem downloading {0}".format(file_name))
                self.failed.append(file_name)

    def print_summary(self):
        # Print summary:
        print ("\n\nDownload Summary ")
        print ("--------------------------------------------------------------------------------")
        print ("  Successes: {0} files, {1} bytes ".format(len(self.success), self.total_bytes))
        for success_file in self.success:
           print ("           - {0}  {1:.2f}MB".format(success_file['file'],(success_file['size']/1024.0**2)))
        if len(self.failed) > 0:
           print ("  Failures: {0} files".format(len(self.failed)))
           for failed_file in self.failed:
              print ("          - {0}".format(failed_file))
        if len(self.skipped) > 0:
           print ("  Skipped: {0} files".format(len(self.skipped)))
           for skipped_file in self.skipped:
              print ("          - {0}".format(skipped_file))
        if len(self.success) > 0:
           print ("  Average Rate: {0:.2f}MB/sec".format( (self.total_bytes/1024.0**2)/self.total_time))
        print ("--------------------------------------------------------------------------------")


if __name__ == "__main__":
    # Setup a signal trap for SIGINT (Ctrl+C)
    signal.signal(signal.SIGINT, signal_handler)

    downloader = bulk_downloader()
    downloader.download_files()
    downloader.print_summary()
